/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.example.testpulltorefresh;

public final class R {
    public static final class anim {
        public static final int bottom_panel_in=0x7f040000;
        public static final int bottom_panel_out=0x7f040001;
    }
    public static final class attr {
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int absListViewStyle=0x7f010000;
        /**  @hide Controls whether this view can take accessibility focus. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td>
                 The system determines whether the view can take accessibility focus - default
                 (recommended).
                 <p>
                 Such a view is consideted by the focus search if it is:
                 <ul>
                 <li>
                 Important for accessibility and actionable (clickable, long clickable, focusable)
                 </li>
                 <li>
                 Important for accessibility, not actionable (clickable, long clickable, focusable),
                 and does not have an actionable predecessor.
                 </li>
                 </ul>
                 An accessibility srvice can request putting accessibility focus on such a view.
                 </p>
            </td></tr>
<tr><td><code>yes</code></td><td>1</td><td>
                 The view can take accessibility focus.
                 <p>
                 A view that can take accessibility focus is always considered during focus
                 search and an accessibility service can request putting accessibility focus
                 on it.
                 </p>
            </td></tr>
<tr><td><code>no</code></td><td>2</td><td>
                 The view can not take accessibility focus.
                 <p>
                 A view that can not take accessibility focus is never considered during focus
                 search and an accessibility service can not request putting accessibility focus
                 on it.
                 </p>
            </td></tr>
</table>
         */
        public static final int accessibilityFocusable=0x7f010048;
        /** 
             Sets whether this ViewGroup's drawable states also include
             its children's drawable states.  This is used, for example, to
             make a group appear to be focused when its child EditText or button
             is focused.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int addStatesFromChildren=0x7f010050;
        /** 
             alpha property of the view, as a value between 0 (completely transparent) and 1
             (completely opaque).
        
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alpha=0x7f010038;
        /** 
             Defines whether the ViewGroup should always draw its children using their
             drawing cache or not. The default value is true.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alwaysDrawnWithCache=0x7f01004f;
        /** 
             Defines whether changes in layout (caused by adding and removing items) should
             cause a LayoutTransition to run. When this flag is set to true, a default
             LayoutTransition object will be set on the ViewGroup container and default
             animations will run when these layout changes occur.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int animateLayoutChanges=0x7f010049;
        /** 
             Defines whether layout animations should create a drawing cache for their
             children. Enabling the animation cache consumes more memory and requires
             a longer initialization but provides better performance. The animation
             cache is enabled by default.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int animationCache=0x7f01004d;
        /** 
             Indicates that this list will always be drawn on top of solid, single-color
             opaque background. This allows the list to optimize drawing.
        
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cacheColorHint=0x7f010059;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cellCount=0x7f010063;
        /** 
             Defines the choice behavior for the view. By default, lists do not have
             any choice behavior. By setting the choiceMode to singleChoice, the list
             allows up to one item to be in a chosen state. By setting the choiceMode to
             multipleChoice, the list allows any number of items to be chosen.
             Finally, by setting the choiceMode to multipleChoiceModal the list allows
             any number of items to be chosen in a special selection mode.
             The application will supply a
             {@link android.widget.AbsListView.MultiChoiceModeListener} using
             {@link android.widget.AbsListView#setMultiChoiceModeListener} to control the
             selection mode. This uses the {@link android.view.ActionMode} API.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Normal list that does not indicate choices. </td></tr>
<tr><td><code>singleChoice</code></td><td>1</td><td> The list allows up to one choice. </td></tr>
<tr><td><code>multipleChoice</code></td><td>2</td><td> The list allows multiple choices. </td></tr>
<tr><td><code>multipleChoiceModal</code></td><td>3</td><td> The list allows multiple choices in a custom selection mode. </td></tr>
</table>
         */
        public static final int choiceMode=0x7f01005c;
        /**  Defines whether this view reacts to click events. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int clickable=0x7f01002a;
        /** 
             Defines whether a child is limited to draw inside of its bounds or not.
             This is useful with animations that scale the size of the children to more
             than 100% for instance. In such a case, this property should be set to false
             to allow the children to draw outside of their bounds. The default value of
             this property is true.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int clipChildren=0x7f01004a;
        /** 
             Defines whether the ViewGroup will clip its drawing surface so as to exclude
             the padding area. This property is set to true by default.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int clipToPadding=0x7f01004b;
        /** 
             Defines text that briefly describes content of the view. This property is used
             primarily for accessibility. Since some views do not have textual
             representation this attribute can be used for providing such.
        
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int contentDescription=0x7f010035;
        /** 
             Defines the relationship between the ViewGroup and its descendants
             when looking for a View to take focus.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>beforeDescendants</code></td><td>0</td><td> The ViewGroup will get focus before any of its descendants. </td></tr>
<tr><td><code>afterDescendants</code></td><td>1</td><td> The ViewGroup will get focus only if none of its descendants want it. </td></tr>
<tr><td><code>blocksDescendants</code></td><td>2</td><td> The ViewGroup will block its descendants from receiving focus. </td></tr>
</table>
         */
        public static final int descendantFocusability=0x7f010051;
        /**  Drawable or color to draw between list items. 
 <attr name="divider" format="reference|color" /> 

             Height of the divider. Will use the intrinsic height of the divider if this
             is not specified.
        
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dividerHeight=0x7f01005e;
        /** 
             When set to true, the selector will be drawn over the selected item.
             Otherwise the selector is drawn behind the selected item. The default
             value is false.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int drawSelectorOnTop=0x7f010054;
        /** 
             Defines the quality of translucent drawing caches. This property is used
             only when the drawing cache is enabled and translucent. The default value is auto.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td>
                 Lets the framework decide what quality level should be used
                 for the drawing cache.
            </td></tr>
<tr><td><code>low</code></td><td>1</td><td>
                 Low quality. When set to low quality, the drawing cache uses a lower color
                 depth, thus losing precision in rendering gradients, but uses less memory.
            </td></tr>
<tr><td><code>high</code></td><td>2</td><td>
                 High quality. When set to high quality, the drawing cache uses a higher
                 color depth but uses more memory.
            </td></tr>
</table>
         */
        public static final int drawingCacheQuality=0x7f01002e;
        /** 
             When this attribute is set to true, the view gets its drawable state
             (focused, pressed, etc.) from its direct parent rather than from itself.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int duplicateParentState=0x7f010030;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int duration=0x7f010064;
        /**  Defines whether to fade out scrollbars when they are not in use. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fadeScrollbars=0x7f010018;
        /** 
             This attribute is deprecated and will be ignored as of
             API level 14 ({@link android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH}).
             Using fading edges may introduce noticeable performance
             degradations and should be used only when required by the application's
             visual design. To request fading edges with API level 14 and above,
             use the <code>android:requiresFadingEdge</code> attribute instead.
        
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No edge is faded. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00001000</td><td> Fades horizontal edges only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00002000</td><td> Fades vertical edges only. </td></tr>
</table>
         */
        public static final int fadingEdge=0x7f010022;
        /**  Defines the length of the fading edges. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fadingEdgeLength=0x7f010024;
        /** 
             When set to true, the list will always show the fast scroll interface.
             This setting implies fastScrollEnabled.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fastScrollAlwaysVisible=0x7f01005d;
        /** 
             Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fastScrollEnabled=0x7f01005a;
        /** 
             Specifies whether to filter touches when the view's window is obscured by
             another visible window.  When set to true, the view will not receive touches
             whenever a toast, dialog or other window appears above the view's window.
             Refer to the {@link android.view.View} security documentation for more details.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int filterTouchesWhenObscured=0x7f01002d;
        /** 
             Boolean internal attribute to adjust view layout based on
             system windows such as the status bar.
             If true, adjusts the padding of this view to leave space for the system windows.
             Will only take effect if this view is in a non-embedded activity.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fitsSystemWindows=0x7f010014;
        /** 
             Boolean that controls whether a view can take focus.  By default the user can not
             move focus to a view; by setting this attribute to true the view is
             allowed to take focus.  This value does not impact the behavior of
             directly calling {@link android.view.View#requestFocus}, which will
             always request focus regardless of this view.  It only impacts where
             focus navigation will try to move focus.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int focusable=0x7f010011;
        /** 
             Boolean that controls whether a view can take focus while in touch mode.
             If this is true for a view, that view can gain focus when clicked on, and can keep
             focus if another view is clicked on that doesn't have this attribute set to true.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int focusableInTouchMode=0x7f010012;
        /** 
             When set to false, the ListView will not draw the divider before each footer view.
             The default value is true.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int footerDividersEnabled=0x7f010060;
        /** 
             Boolean that controls whether a view should have haptic feedback
             enabled for events such as long presses.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int hapticFeedbackEnabled=0x7f010034;
        /** 
             When set to false, the ListView will not draw the divider after each header view.
             The default value is true.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int headerDividersEnabled=0x7f01005f;
        /** 
             Supply an identifier name for this view, to later retrieve it
             with {@link android.view.View#findViewById View.findViewById()} or
             {@link android.app.Activity#findViewById Activity.findViewById()}.
             This must be a
             resource reference; typically you set this using the
             <code>@+</code> syntax to create a new ID resources.
             For example: <code>android:id="@+id/my_id"</code> which
             allows you to later retrieve the view
             with <code>findViewById(R.id.my_id)</code>.
        
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int id=0x7f010006;
        /** 
             Controls how this View is important for accessibility which is if it fires
             accessibility events and if it is reported to accessibility services that
             query the screen. Note: While not recommended, an accessibility service may
             decide to ignore this attribute and operate on all views in the view tree.
        
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td>
                 The system determines whether the view is important for accessibility - default
                 (recommended).
            </td></tr>
<tr><td><code>yes</code></td><td>1</td><td> The view is important for accessibility. </td></tr>
<tr><td><code>no</code></td><td>2</td><td> The view is not important for accessibility. </td></tr>
</table>
         */
        public static final int importantForAccessibility=0x7f010047;
        /** 
             Set this if the view will serve as a scrolling container, meaing
             that it can be resized to shrink its overall window so that there
             will be space for an input method.  If not set, the default
             value will be true if "scrollbars" has the vertical scrollbar
             set, else it will be false.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isScrollContainer=0x7f010017;
        /** 
             Controls whether the view's window should keep the screen on
             while visible.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keepScreenOn=0x7f01002f;
        /** 
             Specifies the type of layer backing this view. The default value is none.
             Refer to {@link android.view.View#setLayerType(int, android.graphics.Paint)}
             for more information.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Don't use a layer. </td></tr>
<tr><td><code>software</code></td><td>1</td><td>
                 Use a software layer. Refer to
                 {@link android.view.View#setLayerType(int, android.graphics.Paint) for
                 more information.
            </td></tr>
<tr><td><code>hardware</code></td><td>2</td><td>
                 Use a hardware layer. Refer to
                 {@link android.view.View#setLayerType(int, android.graphics.Paint) for
                 more information.
            </td></tr>
</table>
         */
        public static final int layerType=0x7f010043;
        /** 
             Defines the layout animation to use the first time the ViewGroup is laid out.
             Layout animations can also be started manually after the first layout.
        
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layoutAnimation=0x7f01004c;
        /** 
             Defines the direction of layout drawing. This typically is associated with writing
             direction of the language script used. The possible values are "ltr" for Left-to-Right,
             "rtl" for Right-to-Left, "locale" and "inherit" from parent view. If there is nothing
             to inherit, "locale" is used. "locale" falls back to "en-US". "ltr" is the direction
             used in "en-US". The default for this attribute is "inherit".
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>ltr</code></td><td>0</td><td> Left-to-Right </td></tr>
<tr><td><code>rtl</code></td><td>1</td><td> Right-to-Left </td></tr>
<tr><td><code>inherit</code></td><td>2</td><td> Inherit from parent </td></tr>
<tr><td><code>locale</code></td><td>3</td><td> Locale </td></tr>
</table>
         */
        public static final int layoutDirection=0x7f010044;
        /**  Drawable used to indicate the currently selected item in the list. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int listSelector=0x7f010053;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listViewStyle=0x7f010001;
        /**  Defines whether this view reacts to long click events. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int longClickable=0x7f01002b;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxDistance=0x7f010066;
        /** 
             Defines the minimum height of the view. It is not guaranteed
             the view will be able to achieve this minimum height (for example,
             if its parent layout constrains it with less available height).
        
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minHeight=0x7f010031;
        /** 
             Defines the minimum width of the view. It is not guaranteed
             the view will be able to achieve this minimum width (for example,
             if its parent layout constrains it with less available width).
        
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minWidth=0x7f010032;
        /** 
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_DOWN}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
        
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusDown=0x7f010028;
        /** 
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_FORWARD}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
        
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusForward=0x7f010029;
        /** 
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_LEFT}.

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
        
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusLeft=0x7f010025;
        /** 
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_RIGHT}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
        
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusRight=0x7f010026;
        /** 
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_UP}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
        
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusUp=0x7f010027;
        /** 
             Name of the method in this View's context to invoke when the view is
             clicked. This name must correspond to a public method that takes
             exactly one parameter of type View. For instance, if you specify
             <code>android:onClick="sayHello"</code>, you must declare a
             <code>public void sayHello(View v)</code> method of your context
             (typically, your Activity).
        
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int onClick=0x7f010036;
        /**  Drawable to draw below list content. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int overScrollFooter=0x7f010062;
        /**  Drawable to draw above list content. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int overScrollHeader=0x7f010061;
        /** 
             Defines over-scrolling behavior. This property is used only if the
             View is scrollable. Over-scrolling is the ability for the user to
             receive feedback when attempting to scroll beyond meaningful content.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>always</code></td><td>0</td><td>
                 Always show over-scroll effects, even if the content fits entirely
                 within the available space.
            </td></tr>
<tr><td><code>ifContentScrolls</code></td><td>1</td><td>
                 Only show over-scroll effects if the content is large
                 enough to meaningfully scroll.
            </td></tr>
<tr><td><code>never</code></td><td>2</td><td> Never show over-scroll effects. </td></tr>
</table>
         */
        public static final int overScrollMode=0x7f010037;
        /** 
             A drawable to use as the background.  This can be either a reference
             to a full drawable resource (such as a PNG image, 9-patch,
             XML state list description, etc), or a solid color such as "#ff000000"
            (black).
        
 <attr name="background" format="reference|color" /> 

             Sets the padding, in pixels, of all four edges.  Padding is defined as
             space between the edges of the view and the view's content. A views size
             will include it's padding.  If a {@link android.R.attr#background}
             is provided, the padding will initially be set to that (0 if the
             drawable does not have padding).  Explicitly setting a padding value
             will override the corresponding padding found in the background.
        
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int padding=0x7f01000a;
        /**  Sets the padding, in pixels, of the bottom edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingBottom=0x7f01000e;
        /**  Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingEnd=0x7f010010;
        /**  Sets the padding, in pixels, of the left edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingLeft=0x7f01000b;
        /**  Sets the padding, in pixels, of the right edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingRight=0x7f01000d;
        /**  Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingStart=0x7f01000f;
        /**  Sets the padding, in pixels, of the top edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingTop=0x7f01000c;
        /** 
             Defines the persistence of the drawing cache. The drawing cache might be
             enabled by a ViewGroup for all its children in specific situations (for
             instance during a scrolling.) This property lets you persist the cache
             in memory after its initial usage. Persisting the cache consumes more
             memory but may prevent frequent garbage collection is the cache is created
             over and over again. By default the persistence is set to scrolling.
        
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x0</td><td> The drawing cache is not persisted after use. </td></tr>
<tr><td><code>animation</code></td><td>0x1</td><td> The drawing cache is persisted after a layout animation. </td></tr>
<tr><td><code>scrolling</code></td><td>0x2</td><td> The drawing cache is persisted after a scroll. </td></tr>
<tr><td><code>all</code></td><td>0x3</td><td> The drawing cache is always persisted. </td></tr>
</table>
         */
        public static final int persistentDrawingCache=0x7f01004e;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int plaColumnNumber=0x7f010002;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int plaColumnPaddingLeft=0x7f010004;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int plaColumnPaddingRight=0x7f010005;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int plaLandscapeColumnNumber=0x7f010003;
        /**  Defines which edges should be faded on scrolling. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No edge is faded. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00001000</td><td> Fades horizontal edges only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00002000</td><td> Fades vertical edges only. </td></tr>
</table>
         */
        public static final int requiresFadingEdge=0x7f010023;
        /**  rotation of the view, in degrees. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rotation=0x7f01003d;
        /**  rotation of the view around the x axis, in degrees. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rotationX=0x7f01003e;
        /**  rotation of the view around the y axis, in degrees. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rotationY=0x7f01003f;
        /** 
             If unset, no state will be saved for this view when it is being
             frozen. The default is true, allowing the view to be saved
             (however it also must have an ID assigned to it for its
             state to be saved).  Setting this to false only disables the
             state for this view, not for its children which may still
             be saved.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int saveEnabled=0x7f01002c;
        /**  scale of the view in the x direction. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scaleX=0x7f010040;
        /**  scale of the view in the y direction. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scaleY=0x7f010041;
        /**  The initial horizontal scroll offset, in pixels. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollX=0x7f010008;
        /**  The initial vertical scroll offset, in pixels. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollY=0x7f010009;
        /**  Defines whether the horizontal scrollbar track should always be drawn. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollbarAlwaysDrawHorizontalTrack=0x7f010020;
        /**  Defines whether the vertical scrollbar track should always be drawn. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollbarAlwaysDrawVerticalTrack=0x7f010021;
        /**  Defines the delay in milliseconds that a scrollbar waits before fade out. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollbarDefaultDelayBeforeFade=0x7f01001a;
        /**  Defines the delay in milliseconds that a scrollbar takes to fade out. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollbarFadeDuration=0x7f010019;
        /**  Sets the width of vertical scrollbars and height of horizontal scrollbars. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollbarSize=0x7f01001b;
        /** 
             Controls the scrollbar style and position. The scrollbars can be overlaid or
             inset. When inset, they add to the padding of the view. And the
             scrollbars can be drawn inside the padding area or on the edge of
             the view. For example, if a view has a background drawable and you
             want to draw the scrollbars inside the padding specified by the
             drawable, you can use insideOverlay or insideInset. If you want them
             to appear at the edge of the view, ignoring the padding, then you can
             use outsideOverlay or outsideInset.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>insideOverlay</code></td><td>0x0</td><td> Inside the padding and overlaid </td></tr>
<tr><td><code>insideInset</code></td><td>0x01000000</td><td> Inside the padding and inset </td></tr>
<tr><td><code>outsideOverlay</code></td><td>0x02000000</td><td> Edge of the view and overlaid </td></tr>
<tr><td><code>outsideInset</code></td><td>0x03000000</td><td> Edge of the view and inset </td></tr>
</table>
         */
        public static final int scrollbarStyle=0x7f010016;
        /**  Defines the horizontal scrollbar thumb drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int scrollbarThumbHorizontal=0x7f01001c;
        /**  Defines the vertical scrollbar thumb drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int scrollbarThumbVertical=0x7f01001d;
        /**  Defines the horizontal scrollbar track drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int scrollbarTrackHorizontal=0x7f01001e;
        /**  Defines the vertical scrollbar track drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int scrollbarTrackVertical=0x7f01001f;
        /**  Defines which scrollbars should be displayed on scrolling or not. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No scrollbar is displayed. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00000100</td><td> Displays horizontal scrollbar only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00000200</td><td> Displays vertical scrollbar only. </td></tr>
</table>
         */
        public static final int scrollbars=0x7f010015;
        /** 
             When set to true, the list uses a drawing cache during scrolling.
             This makes the rendering faster but uses more memory. The default
             value is true.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollingCache=0x7f010056;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int sleepTime=0x7f010065;
        /** 
             When set to true, the list will use a more refined calculation
             method based on the pixels height of the items visible on screen. This
             property is set to true by default but should be set to false if your adapter
             will display items of varying heights. When this property is set to true and
             your adapter displays items of varying heights, the scrollbar thumb will
             change size as the user scrolls through the list. When set to fale, the list
             will use only the number of items in the adapter and the number of items visible
             on screen to determine the scrollbar's properties.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int smoothScrollbar=0x7f01005b;
        /** 
             Boolean that controls whether a view should have sound effects
             enabled for events such as clicking and touching.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int soundEffectsEnabled=0x7f010033;
        /** 
             Sets whether this ViewGroup should split MotionEvents
             to separate child views during touch event dispatch.
             If false (default), touch events will be dispatched to
             the child view where the first pointer went down until
             the last pointer goes up.
             If true, touch events may be dispatched to multiple children.
             MotionEvents for each pointer will be dispatched to the child
             view where the initial ACTION_DOWN event happened.
             See {@link android.view.ViewGroup#setMotionEventSplittingEnabled(boolean)}
             for more information.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int splitMotionEvents=0x7f010052;
        /**  Used by ListView and GridView to stack their content from the bottom. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int stackFromBottom=0x7f010055;
        /** 
             Supply a tag for this view containing a String, to be retrieved
             later with {@link android.view.View#getTag View.getTag()} or
             searched for with {@link android.view.View#findViewWithTag
             View.findViewWithTag()}.  It is generally preferable to use
             IDs (through the android:id attribute) instead of tags because
             they are faster and allow for compile-time type checking.
        
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int tag=0x7f010007;
        /** 
             Alignment of the text. A heuristic is used to determine the resolved
            text alignment.
        
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>inherit</code></td><td>0</td><td> Default </td></tr>
<tr><td><code>gravity</code></td><td>1</td><td>
                 Default for the root view. The gravity determines the alignment, ALIGN_NORMAL,
                ALIGN_CENTER, or ALIGN_OPPOSITE, which are relative to each paragraph’s
                text direction
            </td></tr>
<tr><td><code>textStart</code></td><td>2</td><td> Align to the start of the paragraph, e.g. ALIGN_NORMAL. </td></tr>
<tr><td><code>textEnd</code></td><td>3</td><td> Align to the end of the paragraph, e.g. ALIGN_OPPOSITE. </td></tr>
<tr><td><code>center</code></td><td>4</td><td> Center the paragraph, e.g. ALIGN_CENTER. </td></tr>
<tr><td><code>viewStart</code></td><td>5</td><td>
                 Align to the start of the view, which is ALIGN_LEFT if the view’s resolved
                layoutDirection is LTR, and ALIGN_RIGHT otherwise.
            </td></tr>
<tr><td><code>viewEnd</code></td><td>6</td><td>
                 Align to the end of the view, which is ALIGN_RIGHT if the view’s resolved
                layoutDirection is LTR, and ALIGN_LEFT otherwise
            </td></tr>
</table>
         */
        public static final int textAlignment=0x7f010046;
        /** 
             Direction of the text. A heuristic is used to determine the resolved text direction
             of paragraphs.
        
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>inherit</code></td><td>0</td><td> Default </td></tr>
<tr><td><code>firstStrong</code></td><td>1</td><td>
                 Default for the root view. The first strong directional character determines the
                 paragraph direction.  If there is no strong directional character, the paragraph
                 direction is the view’s resolved layout direction.
            </td></tr>
<tr><td><code>anyRtl</code></td><td>2</td><td>
                 The paragraph direction is RTL if it contains any strong RTL character, otherwise
                 it is LTR if it contains any strong LTR characters.  If there are neither, the
                 paragraph direction is the view’s resolved layout direction.
            </td></tr>
<tr><td><code>ltr</code></td><td>3</td><td> The paragraph direction is left to right. </td></tr>
<tr><td><code>rtl</code></td><td>4</td><td> The paragraph direction is right to left. </td></tr>
<tr><td><code>locale</code></td><td>5</td><td> The paragraph direction is coming from the system Locale. </td></tr>
</table>
         */
        public static final int textDirection=0x7f010045;
        /** 
             When set to true, the list will filter results as the user types. The
             List's adapter must support the Filterable interface for this to work.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textFilterEnabled=0x7f010057;
        /** 
             Sets the transcript mode for the list. In transcript mode, the list
             scrolls to the bottom to make new items visible when they are added.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>disabled</code></td><td>0</td><td> Disables transcript mode. This is the default value. </td></tr>
<tr><td><code>normal</code></td><td>1</td><td>
                 The list will automatically scroll to the bottom when
                 a data set change notification is received and only if the last item is
                 already visible on screen.
            </td></tr>
<tr><td><code>alwaysScroll</code></td><td>2</td><td>
                 The list will automatically scroll to the bottom, no matter what items
                 are currently visible.
            </td></tr>
</table>
         */
        public static final int transcriptMode=0x7f010058;
        /** 
             x location of the pivot point around which the view will rotate and scale.
             This xml attribute sets the pivotX property of the View.
        
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int transformPivotX=0x7f01003b;
        /** 
             y location of the pivot point around which the view will rotate and scale.
             This xml attribute sets the pivotY property of the View.
        
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int transformPivotY=0x7f01003c;
        /** 
             translation in x of the view. This value is added post-layout to the left
             property of the view, which is set by its layout.
        
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int translationX=0x7f010039;
        /** 
             translation in y of the view. This value is added post-layout to the left
             property of the view, which is set by its layout.
        
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int translationY=0x7f01003a;
        /**  Determines which side the vertical scroll bar should be placed on. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>defaultPosition</code></td><td>0</td><td> Place the scroll bar wherever the system default determines. </td></tr>
<tr><td><code>left</code></td><td>1</td><td> Place the scroll bar on the left. </td></tr>
<tr><td><code>right</code></td><td>2</td><td> Place the scroll bar on the right. </td></tr>
</table>
         */
        public static final int verticalScrollbarPosition=0x7f010042;
        /**  Controls the initial visibility of the view. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>visible</code></td><td>0</td><td> Visible on screen; the default value. </td></tr>
<tr><td><code>invisible</code></td><td>1</td><td> Not displayed, but taken into account during layout (space is left for it). </td></tr>
<tr><td><code>gone</code></td><td>2</td><td> Completely hidden, as if the view had not been added. </td></tr>
</table>
         */
        public static final int visibility=0x7f010013;
    }
    public static final class color {
        public static final int about_bottom_text_color=0x7f080006;
        public static final int about_left_text_color=0x7f080004;
        public static final int about_right_text_color=0x7f080005;
        public static final int about_title_color=0x7f080003;
        public static final int btn_chexian_radio=0x7f08000b;
        public static final int dropdownrefresh_txt_color=0x7f080002;
        public static final int gold=0x7f080001;
        public static final int privacy_text_color=0x7f080007;
        public static final int transparent=0x7f080000;
        public static final int zhinan_radio_n=0x7f080008;
        public static final int zhinan_radio_s=0x7f080009;
        public static final int zhinan_topbtn=0x7f08000a;
    }
    public static final class dimen {
        public static final int about_icon_margin_top=0x7f090253;
        public static final int about_logo_margin_top=0x7f090252;
        public static final int about_version_margin_top=0x7f090251;
        /**  Default screen margins, per the Android Design guidelines. 

         Customize dimensions originally defined in res/values/dimens.xml (such as
         screen margins) for sw720dp devices (e.g. 10" tablets) in landscape here.
    
         */
        public static final int activity_horizontal_margin=0x7f090255;
        public static final int activity_vertical_margin=0x7f090256;
        public static final int chexian_main_panel_button_margin_top=0x7f090254;
        public static final int dimen27px=0x7f090248;
        public static final int dimen34px=0x7f090247;
        public static final int dimen_100_dip=0x7f090063;
        public static final int dimen_101_dip=0x7f090064;
        public static final int dimen_102_dip=0x7f090065;
        public static final int dimen_103_dip=0x7f090066;
        public static final int dimen_104_dip=0x7f090067;
        public static final int dimen_105_dip=0x7f090068;
        public static final int dimen_106_dip=0x7f090069;
        public static final int dimen_107_dip=0x7f09006a;
        public static final int dimen_108_dip=0x7f09006b;
        public static final int dimen_109_dip=0x7f09006c;
        public static final int dimen_10_dip=0x7f090009;
        public static final int dimen_110_dip=0x7f09006d;
        public static final int dimen_111_dip=0x7f09006e;
        public static final int dimen_112_dip=0x7f09006f;
        public static final int dimen_113_dip=0x7f090070;
        public static final int dimen_114_dip=0x7f090071;
        public static final int dimen_115_dip=0x7f090072;
        public static final int dimen_116_dip=0x7f090073;
        public static final int dimen_117_dip=0x7f090074;
        public static final int dimen_118_dip=0x7f090075;
        public static final int dimen_119_dip=0x7f090076;
        public static final int dimen_11_dip=0x7f09000a;
        public static final int dimen_120_dip=0x7f090077;
        public static final int dimen_121_dip=0x7f090078;
        public static final int dimen_122_dip=0x7f090079;
        public static final int dimen_123_dip=0x7f09007a;
        public static final int dimen_124_dip=0x7f09007b;
        public static final int dimen_125_dip=0x7f09007c;
        public static final int dimen_126_dip=0x7f09007d;
        public static final int dimen_127_dip=0x7f09007e;
        public static final int dimen_128_dip=0x7f09007f;
        public static final int dimen_129_dip=0x7f090080;
        public static final int dimen_12_dip=0x7f09000b;
        public static final int dimen_130_dip=0x7f090081;
        public static final int dimen_131_dip=0x7f090082;
        public static final int dimen_132_dip=0x7f090083;
        public static final int dimen_133_dip=0x7f090084;
        public static final int dimen_134_dip=0x7f090085;
        public static final int dimen_135_dip=0x7f090086;
        public static final int dimen_136_dip=0x7f090087;
        public static final int dimen_137_dip=0x7f090088;
        public static final int dimen_138_dip=0x7f090089;
        public static final int dimen_139_dip=0x7f09008a;
        public static final int dimen_13_dip=0x7f09000c;
        public static final int dimen_140_dip=0x7f09008b;
        public static final int dimen_141_dip=0x7f09008c;
        public static final int dimen_142_dip=0x7f09008d;
        public static final int dimen_143_dip=0x7f09008e;
        public static final int dimen_144_dip=0x7f09008f;
        public static final int dimen_145_dip=0x7f090090;
        public static final int dimen_146_dip=0x7f090091;
        public static final int dimen_147_dip=0x7f090092;
        public static final int dimen_148_dip=0x7f090093;
        public static final int dimen_149_dip=0x7f090094;
        public static final int dimen_14_dip=0x7f09000d;
        public static final int dimen_150_dip=0x7f090095;
        public static final int dimen_151_dip=0x7f090096;
        public static final int dimen_152_dip=0x7f090097;
        public static final int dimen_153_dip=0x7f090098;
        public static final int dimen_154_dip=0x7f090099;
        public static final int dimen_155_dip=0x7f09009a;
        public static final int dimen_156_dip=0x7f09009b;
        public static final int dimen_157_dip=0x7f09009c;
        public static final int dimen_158_dip=0x7f09009d;
        public static final int dimen_159_dip=0x7f09009e;
        public static final int dimen_15_dip=0x7f09000e;
        public static final int dimen_160_dip=0x7f09009f;
        public static final int dimen_161_dip=0x7f0900a0;
        public static final int dimen_162_dip=0x7f0900a1;
        public static final int dimen_163_dip=0x7f0900a2;
        public static final int dimen_164_dip=0x7f0900a3;
        public static final int dimen_165_dip=0x7f0900a4;
        public static final int dimen_166_dip=0x7f0900a5;
        public static final int dimen_167_dip=0x7f0900a6;
        public static final int dimen_168_dip=0x7f0900a7;
        public static final int dimen_169_dip=0x7f0900a8;
        public static final int dimen_16_dip=0x7f09000f;
        public static final int dimen_170_dip=0x7f0900a9;
        public static final int dimen_171_dip=0x7f0900aa;
        public static final int dimen_172_dip=0x7f0900ab;
        public static final int dimen_173_dip=0x7f0900ac;
        public static final int dimen_174_dip=0x7f0900ad;
        public static final int dimen_175_dip=0x7f0900ae;
        public static final int dimen_176_dip=0x7f0900af;
        public static final int dimen_177_dip=0x7f0900b0;
        public static final int dimen_178_dip=0x7f0900b1;
        public static final int dimen_179_dip=0x7f0900b2;
        public static final int dimen_17_dip=0x7f090010;
        public static final int dimen_180_dip=0x7f0900b3;
        public static final int dimen_181_dip=0x7f0900b4;
        public static final int dimen_182_dip=0x7f0900b5;
        public static final int dimen_183_dip=0x7f0900b6;
        public static final int dimen_184_dip=0x7f0900b7;
        public static final int dimen_185_dip=0x7f0900b8;
        public static final int dimen_186_dip=0x7f0900b9;
        public static final int dimen_187_dip=0x7f0900ba;
        public static final int dimen_188_dip=0x7f0900bb;
        public static final int dimen_189_dip=0x7f0900bc;
        public static final int dimen_18_dip=0x7f090011;
        public static final int dimen_190_dip=0x7f0900bd;
        public static final int dimen_191_dip=0x7f0900be;
        public static final int dimen_192_dip=0x7f0900bf;
        public static final int dimen_193_dip=0x7f0900c0;
        public static final int dimen_194_dip=0x7f0900c1;
        public static final int dimen_195_dip=0x7f0900c2;
        public static final int dimen_196_dip=0x7f0900c3;
        public static final int dimen_197_dip=0x7f0900c4;
        public static final int dimen_198_dip=0x7f0900c5;
        public static final int dimen_199_dip=0x7f0900c6;
        public static final int dimen_19_dip=0x7f090012;
        public static final int dimen_1_dip=0x7f090000;
        public static final int dimen_200_dip=0x7f0900c7;
        public static final int dimen_201_dip=0x7f0900c8;
        public static final int dimen_202_dip=0x7f0900c9;
        public static final int dimen_203_dip=0x7f0900ca;
        public static final int dimen_204_dip=0x7f0900cb;
        public static final int dimen_205_dip=0x7f0900cc;
        public static final int dimen_206_dip=0x7f0900cd;
        public static final int dimen_207_dip=0x7f0900ce;
        public static final int dimen_208_dip=0x7f0900cf;
        public static final int dimen_209_dip=0x7f0900d0;
        public static final int dimen_20_dip=0x7f090013;
        public static final int dimen_210_dip=0x7f0900d1;
        public static final int dimen_211_dip=0x7f0900d2;
        public static final int dimen_212_dip=0x7f0900d3;
        public static final int dimen_213_dip=0x7f0900d4;
        public static final int dimen_214_dip=0x7f0900d5;
        public static final int dimen_215_dip=0x7f0900d6;
        public static final int dimen_216_dip=0x7f0900d7;
        public static final int dimen_217_dip=0x7f0900d8;
        public static final int dimen_218_dip=0x7f0900d9;
        public static final int dimen_219_dip=0x7f0900da;
        public static final int dimen_21_dip=0x7f090014;
        public static final int dimen_220_dip=0x7f0900db;
        public static final int dimen_221_dip=0x7f0900dc;
        public static final int dimen_222_dip=0x7f0900dd;
        public static final int dimen_223_dip=0x7f0900de;
        public static final int dimen_224_dip=0x7f0900df;
        public static final int dimen_225_dip=0x7f0900e0;
        public static final int dimen_226_dip=0x7f0900e1;
        public static final int dimen_227_dip=0x7f0900e2;
        public static final int dimen_228_dip=0x7f0900e3;
        public static final int dimen_229_dip=0x7f0900e4;
        public static final int dimen_22_dip=0x7f090015;
        public static final int dimen_230_dip=0x7f0900e5;
        public static final int dimen_231_dip=0x7f0900e6;
        public static final int dimen_232_dip=0x7f0900e7;
        public static final int dimen_233_dip=0x7f0900e8;
        public static final int dimen_234_dip=0x7f0900e9;
        public static final int dimen_235_dip=0x7f0900ea;
        public static final int dimen_236_dip=0x7f0900eb;
        public static final int dimen_237_dip=0x7f0900ec;
        public static final int dimen_238_dip=0x7f0900ed;
        public static final int dimen_239_dip=0x7f0900ee;
        public static final int dimen_23_dip=0x7f090016;
        public static final int dimen_240_dip=0x7f0900ef;
        public static final int dimen_241_dip=0x7f0900f0;
        public static final int dimen_242_dip=0x7f0900f1;
        public static final int dimen_243_dip=0x7f0900f2;
        public static final int dimen_244_dip=0x7f0900f3;
        public static final int dimen_245_dip=0x7f0900f4;
        public static final int dimen_246_dip=0x7f0900f5;
        public static final int dimen_247_dip=0x7f0900f6;
        public static final int dimen_248_dip=0x7f0900f7;
        public static final int dimen_249_dip=0x7f0900f8;
        public static final int dimen_24_dip=0x7f090017;
        public static final int dimen_250_dip=0x7f0900f9;
        public static final int dimen_251_dip=0x7f0900fa;
        public static final int dimen_252_dip=0x7f0900fb;
        public static final int dimen_253_dip=0x7f0900fc;
        public static final int dimen_254_dip=0x7f0900fd;
        public static final int dimen_255_dip=0x7f0900fe;
        public static final int dimen_256_dip=0x7f0900ff;
        public static final int dimen_257_dip=0x7f090100;
        public static final int dimen_258_dip=0x7f090101;
        public static final int dimen_259_dip=0x7f090102;
        public static final int dimen_25_dip=0x7f090018;
        public static final int dimen_260_dip=0x7f090103;
        public static final int dimen_261_dip=0x7f090104;
        public static final int dimen_262_dip=0x7f090105;
        public static final int dimen_263_dip=0x7f090106;
        public static final int dimen_264_dip=0x7f090107;
        public static final int dimen_265_dip=0x7f090108;
        public static final int dimen_266_dip=0x7f090109;
        public static final int dimen_267_dip=0x7f09010a;
        public static final int dimen_268_dip=0x7f09010b;
        public static final int dimen_269_dip=0x7f09010c;
        public static final int dimen_26_dip=0x7f090019;
        public static final int dimen_270_dip=0x7f09010d;
        public static final int dimen_271_dip=0x7f09010e;
        public static final int dimen_272_dip=0x7f09010f;
        public static final int dimen_273_dip=0x7f090110;
        public static final int dimen_274_dip=0x7f090111;
        public static final int dimen_275_dip=0x7f090112;
        public static final int dimen_276_dip=0x7f090113;
        public static final int dimen_277_dip=0x7f090114;
        public static final int dimen_278_dip=0x7f090115;
        public static final int dimen_279_dip=0x7f090116;
        public static final int dimen_27_dip=0x7f09001a;
        public static final int dimen_280_dip=0x7f090117;
        public static final int dimen_281_dip=0x7f090118;
        public static final int dimen_282_dip=0x7f090119;
        public static final int dimen_283_dip=0x7f09011a;
        public static final int dimen_284_dip=0x7f09011b;
        public static final int dimen_285_dip=0x7f09011c;
        public static final int dimen_286_dip=0x7f09011d;
        public static final int dimen_287_dip=0x7f09011e;
        public static final int dimen_288_dip=0x7f09011f;
        public static final int dimen_289_dip=0x7f090120;
        public static final int dimen_28_dip=0x7f09001b;
        public static final int dimen_290_dip=0x7f090121;
        public static final int dimen_291_dip=0x7f090122;
        public static final int dimen_292_dip=0x7f090123;
        public static final int dimen_293_dip=0x7f090124;
        public static final int dimen_294_dip=0x7f090125;
        public static final int dimen_295_dip=0x7f090126;
        public static final int dimen_296_dip=0x7f090127;
        public static final int dimen_297_dip=0x7f090128;
        public static final int dimen_298_dip=0x7f090129;
        public static final int dimen_299_dip=0x7f09012a;
        public static final int dimen_29_dip=0x7f09001c;
        public static final int dimen_2_dip=0x7f090001;
        public static final int dimen_300_dip=0x7f09012b;
        public static final int dimen_301_dip=0x7f09012c;
        public static final int dimen_302_dip=0x7f09012d;
        public static final int dimen_303_dip=0x7f09012e;
        public static final int dimen_304_dip=0x7f09012f;
        public static final int dimen_305_dip=0x7f090130;
        public static final int dimen_306_dip=0x7f090131;
        public static final int dimen_307_dip=0x7f090132;
        public static final int dimen_308_dip=0x7f090133;
        public static final int dimen_309_dip=0x7f090134;
        public static final int dimen_30_dip=0x7f09001d;
        public static final int dimen_310_dip=0x7f090135;
        public static final int dimen_311_dip=0x7f090136;
        public static final int dimen_312_dip=0x7f090137;
        public static final int dimen_313_dip=0x7f090138;
        public static final int dimen_314_dip=0x7f090139;
        public static final int dimen_315_dip=0x7f09013a;
        public static final int dimen_316_dip=0x7f09013b;
        public static final int dimen_317_dip=0x7f09013c;
        public static final int dimen_318_dip=0x7f09013d;
        public static final int dimen_319_dip=0x7f09013e;
        public static final int dimen_31_dip=0x7f09001e;
        public static final int dimen_320_dip=0x7f09013f;
        public static final int dimen_321_dip=0x7f090140;
        public static final int dimen_322_dip=0x7f090141;
        public static final int dimen_323_dip=0x7f090142;
        public static final int dimen_324_dip=0x7f090143;
        public static final int dimen_325_dip=0x7f090144;
        public static final int dimen_326_dip=0x7f090145;
        public static final int dimen_327_dip=0x7f090146;
        public static final int dimen_328_dip=0x7f090147;
        public static final int dimen_329_dip=0x7f090148;
        public static final int dimen_32_dip=0x7f09001f;
        public static final int dimen_330_dip=0x7f090149;
        public static final int dimen_331_dip=0x7f09014a;
        public static final int dimen_332_dip=0x7f09014b;
        public static final int dimen_333_dip=0x7f09014c;
        public static final int dimen_334_dip=0x7f09014d;
        public static final int dimen_335_dip=0x7f09014e;
        public static final int dimen_336_dip=0x7f09014f;
        public static final int dimen_337_dip=0x7f090150;
        public static final int dimen_338_dip=0x7f090151;
        public static final int dimen_339_dip=0x7f090152;
        public static final int dimen_33_dip=0x7f090020;
        public static final int dimen_340_dip=0x7f090153;
        public static final int dimen_341_dip=0x7f090154;
        public static final int dimen_342_dip=0x7f090155;
        public static final int dimen_343_dip=0x7f090156;
        public static final int dimen_344_dip=0x7f090157;
        public static final int dimen_345_dip=0x7f090158;
        public static final int dimen_346_dip=0x7f090159;
        public static final int dimen_347_dip=0x7f09015a;
        public static final int dimen_348_dip=0x7f09015b;
        public static final int dimen_349_dip=0x7f09015c;
        public static final int dimen_34_dip=0x7f090021;
        public static final int dimen_350_dip=0x7f09015d;
        public static final int dimen_351_dip=0x7f09015e;
        public static final int dimen_352_dip=0x7f09015f;
        public static final int dimen_353_dip=0x7f090160;
        public static final int dimen_354_dip=0x7f090161;
        public static final int dimen_355_dip=0x7f090162;
        public static final int dimen_356_dip=0x7f090163;
        public static final int dimen_357_dip=0x7f090164;
        public static final int dimen_358_dip=0x7f090165;
        public static final int dimen_359_dip=0x7f090166;
        public static final int dimen_35_dip=0x7f090022;
        public static final int dimen_360_dip=0x7f090167;
        public static final int dimen_361_dip=0x7f090168;
        public static final int dimen_362_dip=0x7f090169;
        public static final int dimen_363_dip=0x7f09016a;
        public static final int dimen_364_dip=0x7f09016b;
        public static final int dimen_365_dip=0x7f09016c;
        public static final int dimen_366_dip=0x7f09016d;
        public static final int dimen_367_dip=0x7f09016e;
        public static final int dimen_368_dip=0x7f09016f;
        public static final int dimen_369_dip=0x7f090170;
        public static final int dimen_36_dip=0x7f090023;
        public static final int dimen_370_dip=0x7f090171;
        public static final int dimen_371_dip=0x7f090172;
        public static final int dimen_372_dip=0x7f090173;
        public static final int dimen_373_dip=0x7f090174;
        public static final int dimen_374_dip=0x7f090175;
        public static final int dimen_375_dip=0x7f090176;
        public static final int dimen_376_dip=0x7f090177;
        public static final int dimen_377_dip=0x7f090178;
        public static final int dimen_378_dip=0x7f090179;
        public static final int dimen_379_dip=0x7f09017a;
        public static final int dimen_37_dip=0x7f090024;
        public static final int dimen_380_dip=0x7f09017b;
        public static final int dimen_381_dip=0x7f09017c;
        public static final int dimen_382_dip=0x7f09017d;
        public static final int dimen_383_dip=0x7f09017e;
        public static final int dimen_384_dip=0x7f09017f;
        public static final int dimen_385_dip=0x7f090180;
        public static final int dimen_386_dip=0x7f090181;
        public static final int dimen_387_dip=0x7f090182;
        public static final int dimen_388_dip=0x7f090183;
        public static final int dimen_389_dip=0x7f090184;
        public static final int dimen_38_dip=0x7f090025;
        public static final int dimen_390_dip=0x7f090185;
        public static final int dimen_391_dip=0x7f090186;
        public static final int dimen_392_dip=0x7f090187;
        public static final int dimen_393_dip=0x7f090188;
        public static final int dimen_394_dip=0x7f090189;
        public static final int dimen_395_dip=0x7f09018a;
        public static final int dimen_396_dip=0x7f09018b;
        public static final int dimen_397_dip=0x7f09018c;
        public static final int dimen_398_dip=0x7f09018d;
        public static final int dimen_399_dip=0x7f09018e;
        public static final int dimen_39_dip=0x7f090026;
        public static final int dimen_3_dip=0x7f090002;
        public static final int dimen_400_dip=0x7f09018f;
        public static final int dimen_401_dip=0x7f090190;
        public static final int dimen_402_dip=0x7f090191;
        public static final int dimen_403_dip=0x7f090192;
        public static final int dimen_404_dip=0x7f090193;
        public static final int dimen_405_dip=0x7f090194;
        public static final int dimen_406_dip=0x7f090195;
        public static final int dimen_407_dip=0x7f090196;
        public static final int dimen_408_dip=0x7f090197;
        public static final int dimen_409_dip=0x7f090198;
        public static final int dimen_40_dip=0x7f090027;
        public static final int dimen_410_dip=0x7f090199;
        public static final int dimen_411_dip=0x7f09019a;
        public static final int dimen_412_dip=0x7f09019b;
        public static final int dimen_413_dip=0x7f09019c;
        public static final int dimen_414_dip=0x7f09019d;
        public static final int dimen_415_dip=0x7f09019e;
        public static final int dimen_416_dip=0x7f09019f;
        public static final int dimen_417_dip=0x7f0901a0;
        public static final int dimen_418_dip=0x7f0901a1;
        public static final int dimen_419_dip=0x7f0901a2;
        public static final int dimen_41_dip=0x7f090028;
        public static final int dimen_420_dip=0x7f0901a3;
        public static final int dimen_421_dip=0x7f0901a4;
        public static final int dimen_422_dip=0x7f0901a5;
        public static final int dimen_423_dip=0x7f0901a6;
        public static final int dimen_424_dip=0x7f0901a7;
        public static final int dimen_425_dip=0x7f0901a8;
        public static final int dimen_426_dip=0x7f0901a9;
        public static final int dimen_427_dip=0x7f0901aa;
        public static final int dimen_428_dip=0x7f0901ab;
        public static final int dimen_429_dip=0x7f0901ac;
        public static final int dimen_42_dip=0x7f090029;
        public static final int dimen_430_dip=0x7f0901ad;
        public static final int dimen_431_dip=0x7f0901ae;
        public static final int dimen_432_dip=0x7f0901af;
        public static final int dimen_433_dip=0x7f0901b0;
        public static final int dimen_434_dip=0x7f0901b1;
        public static final int dimen_435_dip=0x7f0901b2;
        public static final int dimen_436_dip=0x7f0901b3;
        public static final int dimen_437_dip=0x7f0901b4;
        public static final int dimen_438_dip=0x7f0901b5;
        public static final int dimen_439_dip=0x7f0901b6;
        public static final int dimen_43_dip=0x7f09002a;
        public static final int dimen_440_dip=0x7f0901b7;
        public static final int dimen_441_dip=0x7f0901b8;
        public static final int dimen_442_dip=0x7f0901b9;
        public static final int dimen_443_dip=0x7f0901ba;
        public static final int dimen_444_dip=0x7f0901bb;
        public static final int dimen_445_dip=0x7f0901bc;
        public static final int dimen_446_dip=0x7f0901bd;
        public static final int dimen_447_dip=0x7f0901be;
        public static final int dimen_448_dip=0x7f0901bf;
        public static final int dimen_449_dip=0x7f0901c0;
        public static final int dimen_44_dip=0x7f09002b;
        public static final int dimen_450_dip=0x7f0901c1;
        public static final int dimen_451_dip=0x7f0901c2;
        public static final int dimen_452_dip=0x7f0901c3;
        public static final int dimen_453_dip=0x7f0901c4;
        public static final int dimen_454_dip=0x7f0901c5;
        public static final int dimen_455_dip=0x7f0901c6;
        public static final int dimen_456_dip=0x7f0901c7;
        public static final int dimen_457_dip=0x7f0901c8;
        public static final int dimen_458_dip=0x7f0901c9;
        public static final int dimen_459_dip=0x7f0901ca;
        public static final int dimen_45_dip=0x7f09002c;
        public static final int dimen_460_dip=0x7f0901cb;
        public static final int dimen_461_dip=0x7f0901cc;
        public static final int dimen_462_dip=0x7f0901cd;
        public static final int dimen_463_dip=0x7f0901ce;
        public static final int dimen_464_dip=0x7f0901cf;
        public static final int dimen_465_dip=0x7f0901d0;
        public static final int dimen_466_dip=0x7f0901d1;
        public static final int dimen_467_dip=0x7f0901d2;
        public static final int dimen_468_dip=0x7f0901d3;
        public static final int dimen_469_dip=0x7f0901d4;
        public static final int dimen_46_dip=0x7f09002d;
        public static final int dimen_470_dip=0x7f0901d5;
        public static final int dimen_471_dip=0x7f0901d6;
        public static final int dimen_472_dip=0x7f0901d7;
        public static final int dimen_473_dip=0x7f0901d8;
        public static final int dimen_474_dip=0x7f0901d9;
        public static final int dimen_475_dip=0x7f0901da;
        public static final int dimen_476_dip=0x7f0901db;
        public static final int dimen_477_dip=0x7f0901dc;
        public static final int dimen_478_dip=0x7f0901dd;
        public static final int dimen_479_dip=0x7f0901de;
        public static final int dimen_47_dip=0x7f09002e;
        public static final int dimen_480_dip=0x7f0901df;
        public static final int dimen_481_dip=0x7f0901e0;
        public static final int dimen_482_dip=0x7f0901e1;
        public static final int dimen_483_dip=0x7f0901e2;
        public static final int dimen_484_dip=0x7f0901e3;
        public static final int dimen_485_dip=0x7f0901e4;
        public static final int dimen_486_dip=0x7f0901e5;
        public static final int dimen_487_dip=0x7f0901e6;
        public static final int dimen_488_dip=0x7f0901e7;
        public static final int dimen_489_dip=0x7f0901e8;
        /**  Top tool bar 
         */
        public static final int dimen_48_dip=0x7f09002f;
        public static final int dimen_490_dip=0x7f0901e9;
        public static final int dimen_491_dip=0x7f0901ea;
        public static final int dimen_492_dip=0x7f0901eb;
        public static final int dimen_493_dip=0x7f0901ec;
        public static final int dimen_494_dip=0x7f0901ed;
        public static final int dimen_495_dip=0x7f0901ee;
        public static final int dimen_496_dip=0x7f0901ef;
        public static final int dimen_497_dip=0x7f0901f0;
        public static final int dimen_498_dip=0x7f0901f1;
        public static final int dimen_499_dip=0x7f0901f2;
        public static final int dimen_49_dip=0x7f090030;
        public static final int dimen_4_dip=0x7f090003;
        public static final int dimen_500_dip=0x7f0901f3;
        public static final int dimen_50_dip=0x7f090031;
        public static final int dimen_51_dip=0x7f090032;
        public static final int dimen_52_dip=0x7f090033;
        public static final int dimen_53_dip=0x7f090034;
        public static final int dimen_54_dip=0x7f090035;
        public static final int dimen_55_dip=0x7f090036;
        public static final int dimen_56_dip=0x7f090037;
        public static final int dimen_57_dip=0x7f090038;
        public static final int dimen_58_dip=0x7f090039;
        public static final int dimen_59_dip=0x7f09003a;
        public static final int dimen_5_dip=0x7f090004;
        public static final int dimen_60_dip=0x7f09003b;
        public static final int dimen_61_dip=0x7f09003c;
        public static final int dimen_62_dip=0x7f09003d;
        public static final int dimen_63_dip=0x7f09003e;
        public static final int dimen_64_dip=0x7f09003f;
        public static final int dimen_65_dip=0x7f090040;
        public static final int dimen_66_dip=0x7f090041;
        public static final int dimen_67_dip=0x7f090042;
        public static final int dimen_68_dip=0x7f090043;
        public static final int dimen_69_dip=0x7f090044;
        public static final int dimen_6_dip=0x7f090005;
        public static final int dimen_70_dip=0x7f090045;
        public static final int dimen_71_dip=0x7f090046;
        public static final int dimen_72_dip=0x7f090047;
        public static final int dimen_73_dip=0x7f090048;
        public static final int dimen_74_dip=0x7f090049;
        public static final int dimen_75_dip=0x7f09004a;
        public static final int dimen_76_dip=0x7f09004b;
        public static final int dimen_77_dip=0x7f09004c;
        public static final int dimen_78_dip=0x7f09004d;
        public static final int dimen_79_dip=0x7f09004e;
        public static final int dimen_7_dip=0x7f090006;
        public static final int dimen_80_dip=0x7f09004f;
        public static final int dimen_81_dip=0x7f090050;
        public static final int dimen_82_dip=0x7f090051;
        public static final int dimen_83_dip=0x7f090052;
        public static final int dimen_84_dip=0x7f090053;
        public static final int dimen_85_dip=0x7f090054;
        public static final int dimen_86_dip=0x7f090055;
        public static final int dimen_87_dip=0x7f090056;
        public static final int dimen_88_dip=0x7f090057;
        public static final int dimen_89_dip=0x7f090058;
        public static final int dimen_8_dip=0x7f090007;
        public static final int dimen_90_dip=0x7f090059;
        public static final int dimen_91_dip=0x7f09005a;
        public static final int dimen_92_dip=0x7f09005b;
        public static final int dimen_93_dip=0x7f09005c;
        public static final int dimen_94_dip=0x7f09005d;
        public static final int dimen_95_dip=0x7f09005e;
        public static final int dimen_96_dip=0x7f09005f;
        public static final int dimen_97_dip=0x7f090060;
        public static final int dimen_98_dip=0x7f090061;
        public static final int dimen_99_dip=0x7f090062;
        public static final int dimen_9_dip=0x7f090008;
        public static final int gap_forsmallgallery=0x7f090250;
        public static final int gap_top_bigimage=0x7f090239;
        public static final int height_arrow=0x7f0901f6;
        public static final int height_biggallery=0x7f09024a;
        public static final int height_cartype_image=0x7f090243;
        /** 
    <dimen name="margin_cartype_iamge">9px</dimen>
    <dimen name="textsize_cartype_image_tab">30px</dimen>
    
         */
        public static final int height_cartype_image_tab=0x7f090244;
        public static final int height_cartypeitem_image74=0x7f09022e;
        public static final int height_chexingzhanshi_label=0x7f09022b;
        /**  czxx 
         */
        public static final int height_czxx_line=0x7f090211;
        public static final int height_darklabel=0x7f09023a;
        public static final int height_homepage_first_line=0x7f090216;
        public static final int height_maintainrecord_input_panel=0x7f09020c;
        public static final int height_smallgallery=0x7f09024d;
        public static final int height_top_bigimage=0x7f090237;
        public static final int height_top_shopshow_title=0x7f090228;
        /**  cartype page top shop show 
         */
        public static final int height_video=0x7f090225;
        public static final int ht_cartype_detailpage_item_line=0x7f0901f9;
        public static final int ht_cartype_detailpage_item_line_icon=0x7f0901fa;
        /**  home page 
         */
        public static final int huodong_image_top=0x7f090214;
        public static final int login_bt_width=0x7f0901f8;
        public static final int login_et_width=0x7f0901f7;
        public static final int login_panel_bottom_tipimage_height=0x7f090220;
        public static final int login_panel_bottom_tipimage_width=0x7f09021f;
        public static final int login_panel_btn_height=0x7f09021e;
        public static final int login_panel_btn_width=0x7f09021d;
        public static final int login_panel_edittext_height=0x7f09021c;
        public static final int login_panel_edittext_width=0x7f09021b;
        public static final int login_panel_hint_text_size=0x7f090219;
        public static final int login_panel_login_error_size=0x7f09021a;
        public static final int login_panel_margin_top=0x7f090218;
        public static final int magintop_outer=0x7f090202;
        /**  ml = margin left 
         */
        public static final int marginTop_czyy_center_icon=0x7f0901fe;
        public static final int marginTop_czyy_center_icon1=0x7f0901fd;
        public static final int margin_biggallery=0x7f09024b;
        public static final int margin_bothside=0x7f09023d;
        public static final int margin_bothside_inner=0x7f090200;
        public static final int margin_bothside_outer=0x7f090201;
        /**  ml = margin left 
         */
        public static final int margin_czyy_center_icon=0x7f0901fc;
        public static final int margin_main=0x7f090232;
        public static final int marginleft_arrow=0x7f0901f5;
        public static final int marginleft_cartypeitem_image=0x7f09022f;
        public static final int marginleft_chexingzhanshi_label=0x7f09022c;
        public static final int marginleft_dangqiangonglishu=0x7f090209;
        public static final int marginleft_dangqiangonglishu_title=0x7f09020a;
        public static final int marginleft_date=0x7f090207;
        public static final int marginleft_date_title=0x7f090208;
        public static final int marginleft_homepage_label=0x7f090217;
        public static final int marginleft_icon=0x7f090205;
        public static final int marginleft_input_dangqiangonglishu=0x7f090206;
        public static final int marginleft_orderbtn=0x7f09020b;
        public static final int marginleft_smallgallery=0x7f09024f;
        public static final int marginleft_top_bigimage=0x7f090238;
        public static final int margintop_cartypelist_panel=0x7f090229;
        public static final int margintop_login_btn=0x7f090222;
        public static final int margintop_login_edittext=0x7f090223;
        public static final int margintop_login_txt_tips=0x7f090221;
        public static final int margintop_panel=0x7f09023e;
        public static final int margintop_smallgallery=0x7f09024e;
        public static final int ml_cartype_detailpage_item_line_icon=0x7f0901fb;
        public static final int padding_cartype_image_bothside=0x7f090245;
        public static final int paddingtop_cartype_image=0x7f090246;
        public static final int text_size_radiobtn=0x7f090224;
        public static final int textsize_cartype_detail_topbigtext=0x7f09023b;
        public static final int textsize_cartype_detail_topcontent=0x7f09023c;
        public static final int textsize_cartype_price_item_content=0x7f090241;
        /**  car type price page 
         */
        public static final int textsize_cartype_price_item_title=0x7f090240;
        public static final int textsize_czxx_label=0x7f090212;
        public static final int textsize_date=0x7f090203;
        public static final int textsize_dropdownrefresh_textsize=0x7f0901f4;
        public static final int textsize_homepage=0x7f090215;
        public static final int textsize_item=0x7f090204;
        public static final int textsize_listitem=0x7f090234;
        public static final int textsize_listitem_cartype_detail=0x7f09023f;
        public static final int textsize_radiobtn=0x7f090235;
        public static final int textsize_top_title_maintain_record=0x7f0901ff;
        public static final int textsize_topbar_title=0x7f090233;
        public static final int textsize_toptitle=0x7f09022a;
        public static final int topimage_border=0x7f090230;
        public static final int topimage_gap=0x7f090231;
        /**  car type color 
         */
        public static final int width_biggallery=0x7f090249;
        public static final int width_btn_mv=0x7f090227;
        /**  car type image 
         */
        public static final int width_cartype_image=0x7f090242;
        public static final int width_cartypeitem_image103=0x7f09022d;
        public static final int width_czxx_label=0x7f090213;
        public static final int width_dangqianggonglishu=0x7f09020f;
        public static final int width_date=0x7f09020e;
        public static final int width_maintainrecord_input=0x7f09020d;
        public static final int width_orderbtn=0x7f090210;
        public static final int width_smallgallery=0x7f09024c;
        /**  cartype detail page 
         */
        public static final int width_top_bigimage=0x7f090236;
        public static final int width_video=0x7f090226;
    }
    public static final class drawable {
        public static final int about_bg=0x7f020000;
        public static final int about_icon=0x7f020001;
        public static final int alertdlg_btn=0x7f020002;
        public static final int alertdlg_btn_n=0x7f020003;
        public static final int alertdlg_btn_s=0x7f020004;
        public static final int alertdlg_content_bg=0x7f020005;
        public static final int arrow_down=0x7f020006;
        public static final int arrow_right=0x7f020007;
        public static final int back_btn=0x7f020008;
        public static final int back_n=0x7f020009;
        public static final int back_s=0x7f02000a;
        public static final int bg_arrow=0x7f02000b;
        public static final int bg_btn_weizhang=0x7f02000c;
        public static final int bg_btn_weizhang1=0x7f02000d;
        public static final int bg_btn_weizhang2=0x7f02000e;
        public static final int bg_common_list_item=0x7f02000f;
        public static final int bg_input=0x7f020010;
        public static final int bg_letter=0x7f020011;
        public static final int bg_list_item=0x7f020012;
        public static final int bg_list_item1=0x7f020013;
        public static final int bg_list_item2=0x7f020014;
        public static final int bg_login=0x7f020015;
        public static final int bg_round_corner_panel=0x7f020016;
        public static final int bg_slide_bottom=0x7f020017;
        public static final int bg_slide_bottom2=0x7f020018;
        public static final int bg_slide_top=0x7f020019;
        public static final int big_text_bg=0x7f02001a;
        public static final int bj_back_btn=0x7f02001b;
        public static final int bj_back_btn_n=0x7f02001c;
        public static final int bj_back_btn_s=0x7f02001d;
        public static final int bj_banner=0x7f02001e;
        public static final int bj_bg=0x7f02001f;
        public static final int bj_car_js_bg=0x7f020020;
        public static final int bj_checkbox=0x7f020021;
        public static final int bj_checkbox_none=0x7f020022;
        public static final int bj_checkbox_select=0x7f020023;
        public static final int bj_cj_btn_dis=0x7f020024;
        public static final int bj_input_bg=0x7f020025;
        public static final int bj_num_bg=0x7f020026;
        public static final int bj_num_bg_mask=0x7f020027;
        public static final int bj_prize_btn=0x7f020028;
        public static final int bj_prize_btn_n=0x7f020029;
        public static final int bj_prize_btn_s=0x7f02002a;
        public static final int bj_tab_zs=0x7f02002b;
        public static final int bj_tel_btn=0x7f02002c;
        public static final int bj_tel_btn_n=0x7f02002d;
        public static final int bj_tel_btn_s=0x7f02002e;
        public static final int bj_view_btn=0x7f02002f;
        public static final int bj_view_btn_n=0x7f020030;
        public static final int bj_view_btn_s=0x7f020031;
        public static final int blank=0x7f020032;
        public static final int btn_login=0x7f020033;
        public static final int bule=0x7f0200a4;
        public static final int bulge_left=0x7f020034;
        public static final int bulge_right=0x7f020035;
        public static final int cancle_btn_n=0x7f020036;
        public static final int cancle_btn_s=0x7f020037;
        public static final int close_btn_n=0x7f020038;
        public static final int close_btn_s=0x7f020039;
        public static final int common_list_bg=0x7f0200a6;
        public static final int common_question=0x7f02003a;
        public static final int darkgray=0x7f0200a2;
        public static final int deep_gray_text_bg=0x7f02003b;
        public static final int dent_left=0x7f02003c;
        public static final int dent_left_1=0x7f02003d;
        public static final int dent_right=0x7f02003e;
        public static final int dent_right_1=0x7f02003f;
        public static final int detail_line_parter=0x7f020040;
        public static final int diwen_bg=0x7f020041;
        public static final int download_btn=0x7f020042;
        public static final int empty_photo=0x7f020043;
        public static final int expert=0x7f020044;
        public static final int explain_in_detail=0x7f020045;
        public static final int gg1=0x7f020046;
        public static final int gray_bg=0x7f020047;
        public static final int gray_text_bg=0x7f020048;
        public static final int green_btn=0x7f020049;
        public static final int green_btn_n=0x7f02004a;
        public static final int green_btn_s=0x7f02004b;
        public static final int green_text_bg=0x7f02004c;
        public static final int green_text_bg_n=0x7f02004d;
        public static final int green_text_bg_s=0x7f02004e;
        public static final int ic_dialog_menu_generic=0x7f02004f;
        public static final int ic_launcher=0x7f020050;
        public static final int icon_warning=0x7f020051;
        public static final int jcaptcha=0x7f020052;
        public static final int kakamobi_logo=0x7f020053;
        public static final int leader=0x7f020054;
        public static final int left_arrow=0x7f020055;
        public static final int left_arrow_n=0x7f020056;
        public static final int left_arrow_s=0x7f020057;
        public static final int list_dot=0x7f020058;
        public static final int list_item_cover_all=0x7f020059;
        public static final int list_item_cover_all2=0x7f02005a;
        public static final int list_item_cover_bottom=0x7f02005b;
        public static final int list_item_cover_bottom2=0x7f02005c;
        public static final int list_item_cover_center=0x7f02005d;
        public static final int list_item_cover_center2=0x7f02005e;
        public static final int list_item_cover_top=0x7f02005f;
        public static final int list_item_cover_top2=0x7f020060;
        public static final int list_round=0x7f020061;
        public static final int loading=0x7f020062;
        public static final int loading1=0x7f020063;
        public static final int main_bg=0x7f0200a5;
        public static final int man2=0x7f020064;
        public static final int man3=0x7f020065;
        public static final int man4=0x7f020066;
        public static final int map_dd_bg=0x7f020067;
        public static final int mm=0x7f020068;
        public static final int mm_help=0x7f020069;
        public static final int mm_help_n=0x7f02006a;
        public static final int mm_help_s=0x7f02006b;
        public static final int my_car=0x7f02006c;
        public static final int num_keyboard_downbtn=0x7f02006d;
        public static final int num_keyboard_downbtn_n=0x7f02006e;
        public static final int num_keyboard_downbtn_s=0x7f02006f;
        public static final int price=0x7f020070;
        public static final int price_n=0x7f020071;
        public static final int price_s=0x7f020072;
        public static final int progress_medium_white=0x7f020073;
        public static final int recommend=0x7f020074;
        public static final int recommend_n=0x7f020075;
        public static final int recommend_s=0x7f020076;
        public static final int right_arrow=0x7f020077;
        public static final int right_arrow_n=0x7f020078;
        public static final int right_arrow_s=0x7f020079;
        public static final int site_back_btn=0x7f02007a;
        public static final int site_back_btn_n=0x7f02007b;
        public static final int site_back_btn_s=0x7f02007c;
        public static final int site_bottombg=0x7f02007d;
        public static final int site_dis_back_btn_n=0x7f02007e;
        public static final int site_dis_next_btn_n=0x7f02007f;
        public static final int site_next_btn=0x7f020080;
        public static final int site_next_btn_n=0x7f020081;
        public static final int site_next_btn_s=0x7f020082;
        public static final int site_refresh_btn=0x7f020083;
        public static final int site_refresh_btn_n=0x7f020084;
        public static final int site_refresh_btn_s=0x7f020085;
        public static final int site_stop_btn=0x7f020086;
        public static final int site_stop_btn_n=0x7f020087;
        public static final int site_stop_btn_s=0x7f020088;
        public static final int small_text_bg=0x7f020089;
        public static final int small_text_bg_n=0x7f02008a;
        public static final int small_text_bg_s=0x7f02008b;
        public static final int software_icon1=0x7f02008c;
        public static final int software_icon2=0x7f02008d;
        public static final int software_title1=0x7f02008e;
        public static final int software_title2=0x7f02008f;
        public static final int solid_blue=0x7f0200a7;
        public static final int temp_audi=0x7f020090;
        public static final int tj=0x7f020091;
        public static final int topbar_bg=0x7f020092;
        public static final int topbtn=0x7f020093;
        public static final int topbtn_n=0x7f020094;
        public static final int topbtn_s=0x7f020095;
        public static final int txt_tips=0x7f020096;
        public static final int white=0x7f0200a3;
        public static final int white_btn=0x7f020097;
        public static final int widget_selector_bg=0x7f020098;
        public static final int widget_wheelview_wheel_bg=0x7f020099;
        public static final int widget_wheelview_wheel_val=0x7f02009a;
        public static final int z_arrow_down=0x7f02009b;
        public static final int zhinan_back_btn=0x7f02009c;
        public static final int zhinan_back_btn_n=0x7f02009d;
        public static final int zhinan_back_btn_s=0x7f02009e;
        public static final int zhinan_close_btn=0x7f02009f;
        public static final int zhinan_radio_bg=0x7f0200a0;
        public static final int zhinan_topbar=0x7f0200a1;
    }
    public static final class id {
        public static final int action_settings=0x7f050048;
        public static final int afterDescendants=0x7f050028;
        public static final int all=0x7f050026;
        public static final int always=0x7f05000e;
        public static final int alwaysScroll=0x7f05002c;
        public static final int animation=0x7f050024;
        public static final int anyRtl=0x7f05001b;
        public static final int auto=0x7f05000b;
        public static final int beforeDescendants=0x7f050027;
        public static final int blocksDescendants=0x7f050029;
        public static final int card_list=0x7f050036;
        public static final int center=0x7f05001f;
        public static final int defaultPosition=0x7f050011;
        public static final int disabled=0x7f05002a;
        public static final int firstStrong=0x7f05001a;
        public static final int gone=0x7f050003;
        public static final int gravity=0x7f05001c;
        public static final int hardware=0x7f050015;
        public static final int head_arrowImageView=0x7f050032;
        public static final int head_contentLayout=0x7f050031;
        public static final int head_lastUpdatedTextView=0x7f050035;
        public static final int head_progressBar=0x7f050033;
        public static final int head_tipsTextView=0x7f050034;
        public static final int high=0x7f05000d;
        public static final int horizontal=0x7f050005;
        public static final int ifContentScrolls=0x7f05000f;
        public static final int inherit=0x7f050018;
        public static final int insideInset=0x7f050008;
        public static final int insideOverlay=0x7f050007;
        public static final int invisible=0x7f050002;
        public static final int left=0x7f050012;
        public static final int list=0x7f050030;
        public static final int locale=0x7f050019;
        public static final int low=0x7f05000c;
        public static final int ltr=0x7f050016;
        public static final int multipleChoice=0x7f05002e;
        public static final int multipleChoiceModal=0x7f05002f;
        public static final int my_progress_bar=0x7f05003c;
        public static final int never=0x7f050010;
        public static final int no=0x7f050023;
        public static final int none=0x7f050004;
        public static final int normal=0x7f05002b;
        public static final int outsideInset=0x7f05000a;
        public static final int outsideOverlay=0x7f050009;
        public static final int panel_top=0x7f050039;
        public static final int ptr_id_header=0x7f050042;
        public static final int ptr_id_image=0x7f050043;
        public static final int ptr_id_last_updated=0x7f050047;
        public static final int ptr_id_spinner=0x7f050044;
        public static final int ptr_id_text=0x7f050046;
        public static final int ptr_id_textwrapper=0x7f050045;
        public static final int right=0x7f050013;
        public static final int rtl=0x7f050017;
        public static final int scrapped_view=0x7f050000;
        public static final int scrolling=0x7f050025;
        public static final int singleChoice=0x7f05002d;
        public static final int software=0x7f050014;
        public static final int text=0x7f050038;
        public static final int textEnd=0x7f05001e;
        public static final int textStart=0x7f05001d;
        public static final int thumbnail=0x7f050037;
        public static final int top_back=0x7f05003a;
        public static final int top_title=0x7f05003b;
        public static final int vertical=0x7f050006;
        public static final int viewEnd=0x7f050021;
        public static final int viewStart=0x7f050020;
        public static final int visible=0x7f050001;
        public static final int web_view=0x7f05003d;
        public static final int web_view_btn_back=0x7f05003f;
        public static final int web_view_btn_next=0x7f050041;
        public static final int web_view_btn_refresh=0x7f050040;
        public static final int web_view_toolbar=0x7f05003e;
        public static final int yes=0x7f050022;
    }
    public static final class integer {
        public static final int chexian_prize_cell_count=0x7f0a0000;
        public static final int chexian_prize_duration=0x7f0a0001;
        public static final int chexian_prize_max_distance=0x7f0a0002;
    }
    public static final class layout {
        public static final int act_pull_to_refresh_sample=0x7f030000;
        public static final int act_sample=0x7f030001;
        public static final int activity_main=0x7f030002;
        public static final int head=0x7f030003;
        public static final int item_sample=0x7f030004;
        public static final int my_web_view=0x7f030005;
        public static final int ptr_header=0x7f030006;
    }
    public static final class menu {
        public static final int main=0x7f0b0000;
    }
    public static final class string {
        public static final int action_settings=0x7f07000f;
        public static final int app_name=0x7f070000;
        public static final int chexian_test=0x7f07000e;
        public static final int feedback_url=0x7f070009;
        public static final int hello_world=0x7f070010;
        public static final int no_network_connection_toast=0x7f070008;
        public static final int notice_url=0x7f070006;
        public static final int product=0x7f070007;
        public static final int ptr_last_updated=0x7f070004;
        public static final int ptr_pull_to_refresh=0x7f070001;
        public static final int ptr_refreshing=0x7f070003;
        public static final int ptr_release_to_refresh=0x7f070002;
        /**  推广人（过时） 
         */
        public static final int ren=0x7f07000c;
        public static final int software1=0x7f07000a;
        public static final int software2=0x7f07000b;
        /**  更新相关 
         */
        public static final int update_url=0x7f070005;
        /**  推广渠道（过时） 
         */
        public static final int vr=0x7f07000d;
    }
    public static final class style {
        /** 
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        

        Base application theme for API 11+. This theme completely replaces
        AppBaseTheme from res/values/styles.xml on API 11+ devices.
    
 API 11 theme customizations can go here. 

        Base application theme for API 14+. This theme completely replaces
        AppBaseTheme from BOTH res/values/styles.xml and
        res/values-v11/styles.xml on API 14+ devices.
    
 API 14 theme customizations can go here. 
         */
        public static final int AppBaseTheme=0x7f06000e;
        /**  Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
         */
        public static final int AppTheme=0x7f060007;
        /**  透明样式 
         */
        public static final int Transparent=0x7f06000d;
        public static final int dropdownrefresh_recentupdatetime=0x7f06000c;
        public static final int dropdownrefresh_tips=0x7f06000b;
        /**  顶部新闻分类条目样式 
         */
        public static final int header_title_style=0x7f06000a;
        public static final int mc_dialog=0x7f060008;
        /**  加载条样式 
         */
        public static final int progress=0x7f060009;
        public static final int ptr_arrow=0x7f060002;
        public static final int ptr_header=0x7f060001;
        public static final int ptr_headerContainer=0x7f060000;
        public static final int ptr_last_updated=0x7f060006;
        public static final int ptr_spinner=0x7f060003;
        public static final int ptr_text=0x7f060005;
        public static final int ptr_textwrapper=0x7f060004;
    }
    public static final class styleable {
        /** Attributes that can be used with a AbsListView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AbsListView_cacheColorHint com.example.testpulltorefresh:cacheColorHint}</code></td><td>
             Indicates that this list will always be drawn on top of solid, single-color
             opaque background.</td></tr>
           <tr><td><code>{@link #AbsListView_choiceMode com.example.testpulltorefresh:choiceMode}</code></td><td>
             Defines the choice behavior for the view.</td></tr>
           <tr><td><code>{@link #AbsListView_drawSelectorOnTop com.example.testpulltorefresh:drawSelectorOnTop}</code></td><td>
             When set to true, the selector will be drawn over the selected item.</td></tr>
           <tr><td><code>{@link #AbsListView_fastScrollAlwaysVisible com.example.testpulltorefresh:fastScrollAlwaysVisible}</code></td><td>
             When set to true, the list will always show the fast scroll interface.</td></tr>
           <tr><td><code>{@link #AbsListView_fastScrollEnabled com.example.testpulltorefresh:fastScrollEnabled}</code></td><td>
             Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list.</td></tr>
           <tr><td><code>{@link #AbsListView_listSelector com.example.testpulltorefresh:listSelector}</code></td><td> Drawable used to indicate the currently selected item in the list.</td></tr>
           <tr><td><code>{@link #AbsListView_scrollingCache com.example.testpulltorefresh:scrollingCache}</code></td><td>
             When set to true, the list uses a drawing cache during scrolling.</td></tr>
           <tr><td><code>{@link #AbsListView_smoothScrollbar com.example.testpulltorefresh:smoothScrollbar}</code></td><td>
             When set to true, the list will use a more refined calculation
             method based on the pixels height of the items visible on screen.</td></tr>
           <tr><td><code>{@link #AbsListView_stackFromBottom com.example.testpulltorefresh:stackFromBottom}</code></td><td> Used by ListView and GridView to stack their content from the bottom.</td></tr>
           <tr><td><code>{@link #AbsListView_textFilterEnabled com.example.testpulltorefresh:textFilterEnabled}</code></td><td>
             When set to true, the list will filter results as the user types.</td></tr>
           <tr><td><code>{@link #AbsListView_transcriptMode com.example.testpulltorefresh:transcriptMode}</code></td><td>
             Sets the transcript mode for the list.</td></tr>
           </table>
           @see #AbsListView_cacheColorHint
           @see #AbsListView_choiceMode
           @see #AbsListView_drawSelectorOnTop
           @see #AbsListView_fastScrollAlwaysVisible
           @see #AbsListView_fastScrollEnabled
           @see #AbsListView_listSelector
           @see #AbsListView_scrollingCache
           @see #AbsListView_smoothScrollbar
           @see #AbsListView_stackFromBottom
           @see #AbsListView_textFilterEnabled
           @see #AbsListView_transcriptMode
         */
        public static final int[] AbsListView = {
            0x7f010053, 0x7f010054, 0x7f010055, 0x7f010056,
            0x7f010057, 0x7f010058, 0x7f010059, 0x7f01005a,
            0x7f01005b, 0x7f01005c, 0x7f01005d
        };
        /**
          <p>
          @attr description
          
             Indicates that this list will always be drawn on top of solid, single-color
             opaque background. This allows the list to optimize drawing.
        


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:cacheColorHint
        */
        public static final int AbsListView_cacheColorHint = 6;
        /**
          <p>
          @attr description
          
             Defines the choice behavior for the view. By default, lists do not have
             any choice behavior. By setting the choiceMode to singleChoice, the list
             allows up to one item to be in a chosen state. By setting the choiceMode to
             multipleChoice, the list allows any number of items to be chosen.
             Finally, by setting the choiceMode to multipleChoiceModal the list allows
             any number of items to be chosen in a special selection mode.
             The application will supply a
             {@link android.widget.AbsListView.MultiChoiceModeListener} using
             {@link android.widget.AbsListView#setMultiChoiceModeListener} to control the
             selection mode. This uses the {@link android.view.ActionMode} API.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Normal list that does not indicate choices. </td></tr>
<tr><td><code>singleChoice</code></td><td>1</td><td> The list allows up to one choice. </td></tr>
<tr><td><code>multipleChoice</code></td><td>2</td><td> The list allows multiple choices. </td></tr>
<tr><td><code>multipleChoiceModal</code></td><td>3</td><td> The list allows multiple choices in a custom selection mode. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:choiceMode
        */
        public static final int AbsListView_choiceMode = 9;
        /**
          <p>
          @attr description
          
             When set to true, the selector will be drawn over the selected item.
             Otherwise the selector is drawn behind the selected item. The default
             value is false.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:drawSelectorOnTop
        */
        public static final int AbsListView_drawSelectorOnTop = 1;
        /**
          <p>
          @attr description
          
             When set to true, the list will always show the fast scroll interface.
             This setting implies fastScrollEnabled.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:fastScrollAlwaysVisible
        */
        public static final int AbsListView_fastScrollAlwaysVisible = 10;
        /**
          <p>
          @attr description
          
             Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:fastScrollEnabled
        */
        public static final int AbsListView_fastScrollEnabled = 7;
        /**
          <p>
          @attr description
           Drawable used to indicate the currently selected item in the list. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name android:listSelector
        */
        public static final int AbsListView_listSelector = 0;
        /**
          <p>
          @attr description
          
             When set to true, the list uses a drawing cache during scrolling.
             This makes the rendering faster but uses more memory. The default
             value is true.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:scrollingCache
        */
        public static final int AbsListView_scrollingCache = 3;
        /**
          <p>
          @attr description
          
             When set to true, the list will use a more refined calculation
             method based on the pixels height of the items visible on screen. This
             property is set to true by default but should be set to false if your adapter
             will display items of varying heights. When this property is set to true and
             your adapter displays items of varying heights, the scrollbar thumb will
             change size as the user scrolls through the list. When set to fale, the list
             will use only the number of items in the adapter and the number of items visible
             on screen to determine the scrollbar's properties.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:smoothScrollbar
        */
        public static final int AbsListView_smoothScrollbar = 8;
        /**
          <p>
          @attr description
           Used by ListView and GridView to stack their content from the bottom. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:stackFromBottom
        */
        public static final int AbsListView_stackFromBottom = 2;
        /**
          <p>
          @attr description
          
             When set to true, the list will filter results as the user types. The
             List's adapter must support the Filterable interface for this to work.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:textFilterEnabled
        */
        public static final int AbsListView_textFilterEnabled = 4;
        /**
          <p>
          @attr description
          
             Sets the transcript mode for the list. In transcript mode, the list
             scrolls to the bottom to make new items visible when they are added.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>disabled</code></td><td>0</td><td> Disables transcript mode. This is the default value. </td></tr>
<tr><td><code>normal</code></td><td>1</td><td>
                 The list will automatically scroll to the bottom when
                 a data set change notification is received and only if the last item is
                 already visible on screen.
            </td></tr>
<tr><td><code>alwaysScroll</code></td><td>2</td><td>
                 The list will automatically scroll to the bottom, no matter what items
                 are currently visible.
            </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:transcriptMode
        */
        public static final int AbsListView_transcriptMode = 5;
        /** Attributes that can be used with a CheXianNumberView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CheXianNumberView_cellCount com.example.testpulltorefresh:cellCount}</code></td><td></td></tr>
           <tr><td><code>{@link #CheXianNumberView_duration com.example.testpulltorefresh:duration}</code></td><td></td></tr>
           <tr><td><code>{@link #CheXianNumberView_maxDistance com.example.testpulltorefresh:maxDistance}</code></td><td></td></tr>
           <tr><td><code>{@link #CheXianNumberView_sleepTime com.example.testpulltorefresh:sleepTime}</code></td><td></td></tr>
           </table>
           @see #CheXianNumberView_cellCount
           @see #CheXianNumberView_duration
           @see #CheXianNumberView_maxDistance
           @see #CheXianNumberView_sleepTime
         */
        public static final int[] CheXianNumberView = {
            0x7f010063, 0x7f010064, 0x7f010065, 0x7f010066
        };
        /**
          <p>This symbol is the offset where the {@link com.example.testpulltorefresh.R.attr#cellCount}
          attribute's value can be found in the {@link #CheXianNumberView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:cellCount
        */
        public static final int CheXianNumberView_cellCount = 0;
        /**
          <p>This symbol is the offset where the {@link com.example.testpulltorefresh.R.attr#duration}
          attribute's value can be found in the {@link #CheXianNumberView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:duration
        */
        public static final int CheXianNumberView_duration = 1;
        /**
          <p>This symbol is the offset where the {@link com.example.testpulltorefresh.R.attr#maxDistance}
          attribute's value can be found in the {@link #CheXianNumberView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:maxDistance
        */
        public static final int CheXianNumberView_maxDistance = 3;
        /**
          <p>This symbol is the offset where the {@link com.example.testpulltorefresh.R.attr#sleepTime}
          attribute's value can be found in the {@link #CheXianNumberView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:sleepTime
        */
        public static final int CheXianNumberView_sleepTime = 2;
        /** Attributes that can be used with a ListView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ListView_dividerHeight com.example.testpulltorefresh:dividerHeight}</code></td><td> Drawable or color to draw between list items.</td></tr>
           <tr><td><code>{@link #ListView_footerDividersEnabled com.example.testpulltorefresh:footerDividersEnabled}</code></td><td>
             When set to false, the ListView will not draw the divider before each footer view.</td></tr>
           <tr><td><code>{@link #ListView_headerDividersEnabled com.example.testpulltorefresh:headerDividersEnabled}</code></td><td>
             When set to false, the ListView will not draw the divider after each header view.</td></tr>
           <tr><td><code>{@link #ListView_overScrollFooter com.example.testpulltorefresh:overScrollFooter}</code></td><td> Drawable to draw below list content.</td></tr>
           <tr><td><code>{@link #ListView_overScrollHeader com.example.testpulltorefresh:overScrollHeader}</code></td><td> Drawable to draw above list content.</td></tr>
           </table>
           @see #ListView_dividerHeight
           @see #ListView_footerDividersEnabled
           @see #ListView_headerDividersEnabled
           @see #ListView_overScrollFooter
           @see #ListView_overScrollHeader
         */
        public static final int[] ListView = {
            0x7f01005e, 0x7f01005f, 0x7f010060, 0x7f010061,
            0x7f010062
        };
        /**
          <p>
          @attr description
           Drawable or color to draw between list items. 
 <attr name="divider" format="reference|color" /> 

             Height of the divider. Will use the intrinsic height of the divider if this
             is not specified.
        


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:dividerHeight
        */
        public static final int ListView_dividerHeight = 0;
        /**
          <p>
          @attr description
          
             When set to false, the ListView will not draw the divider before each footer view.
             The default value is true.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:footerDividersEnabled
        */
        public static final int ListView_footerDividersEnabled = 2;
        /**
          <p>
          @attr description
          
             When set to false, the ListView will not draw the divider after each header view.
             The default value is true.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:headerDividersEnabled
        */
        public static final int ListView_headerDividersEnabled = 1;
        /**
          <p>
          @attr description
           Drawable to draw below list content. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name android:overScrollFooter
        */
        public static final int ListView_overScrollFooter = 4;
        /**
          <p>
          @attr description
           Drawable to draw above list content. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name android:overScrollHeader
        */
        public static final int ListView_overScrollHeader = 3;
        /** Attributes that can be used with a PinterestLikeAdapterView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PinterestLikeAdapterView_plaColumnNumber com.example.testpulltorefresh:plaColumnNumber}</code></td><td></td></tr>
           <tr><td><code>{@link #PinterestLikeAdapterView_plaColumnPaddingLeft com.example.testpulltorefresh:plaColumnPaddingLeft}</code></td><td></td></tr>
           <tr><td><code>{@link #PinterestLikeAdapterView_plaColumnPaddingRight com.example.testpulltorefresh:plaColumnPaddingRight}</code></td><td></td></tr>
           <tr><td><code>{@link #PinterestLikeAdapterView_plaLandscapeColumnNumber com.example.testpulltorefresh:plaLandscapeColumnNumber}</code></td><td></td></tr>
           </table>
           @see #PinterestLikeAdapterView_plaColumnNumber
           @see #PinterestLikeAdapterView_plaColumnPaddingLeft
           @see #PinterestLikeAdapterView_plaColumnPaddingRight
           @see #PinterestLikeAdapterView_plaLandscapeColumnNumber
         */
        public static final int[] PinterestLikeAdapterView = {
            0x7f010002, 0x7f010003, 0x7f010004, 0x7f010005
        };
        /**
          <p>This symbol is the offset where the {@link com.example.testpulltorefresh.R.attr#plaColumnNumber}
          attribute's value can be found in the {@link #PinterestLikeAdapterView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:plaColumnNumber
        */
        public static final int PinterestLikeAdapterView_plaColumnNumber = 0;
        /**
          <p>This symbol is the offset where the {@link com.example.testpulltorefresh.R.attr#plaColumnPaddingLeft}
          attribute's value can be found in the {@link #PinterestLikeAdapterView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:plaColumnPaddingLeft
        */
        public static final int PinterestLikeAdapterView_plaColumnPaddingLeft = 2;
        /**
          <p>This symbol is the offset where the {@link com.example.testpulltorefresh.R.attr#plaColumnPaddingRight}
          attribute's value can be found in the {@link #PinterestLikeAdapterView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:plaColumnPaddingRight
        */
        public static final int PinterestLikeAdapterView_plaColumnPaddingRight = 3;
        /**
          <p>This symbol is the offset where the {@link com.example.testpulltorefresh.R.attr#plaLandscapeColumnNumber}
          attribute's value can be found in the {@link #PinterestLikeAdapterView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:plaLandscapeColumnNumber
        */
        public static final int PinterestLikeAdapterView_plaLandscapeColumnNumber = 1;
        /** Attributes that can be used with a View.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #View_accessibilityFocusable com.example.testpulltorefresh:accessibilityFocusable}</code></td><td> @hide Controls whether this view can take accessibility focus.</td></tr>
           <tr><td><code>{@link #View_alpha com.example.testpulltorefresh:alpha}</code></td><td>
             alpha property of the view, as a value between 0 (completely transparent) and 1
             (completely opaque).</td></tr>
           <tr><td><code>{@link #View_clickable com.example.testpulltorefresh:clickable}</code></td><td> Defines whether this view reacts to click events.</td></tr>
           <tr><td><code>{@link #View_contentDescription com.example.testpulltorefresh:contentDescription}</code></td><td>
             Defines text that briefly describes content of the view.</td></tr>
           <tr><td><code>{@link #View_drawingCacheQuality com.example.testpulltorefresh:drawingCacheQuality}</code></td><td>
             Defines the quality of translucent drawing caches.</td></tr>
           <tr><td><code>{@link #View_duplicateParentState com.example.testpulltorefresh:duplicateParentState}</code></td><td>
             When this attribute is set to true, the view gets its drawable state
             (focused, pressed, etc.</td></tr>
           <tr><td><code>{@link #View_fadeScrollbars com.example.testpulltorefresh:fadeScrollbars}</code></td><td> Defines whether to fade out scrollbars when they are not in use.</td></tr>
           <tr><td><code>{@link #View_fadingEdge com.example.testpulltorefresh:fadingEdge}</code></td><td>
             This attribute is deprecated and will be ignored as of
             API level 14 ({@link android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH}).</td></tr>
           <tr><td><code>{@link #View_fadingEdgeLength com.example.testpulltorefresh:fadingEdgeLength}</code></td><td> Defines the length of the fading edges.</td></tr>
           <tr><td><code>{@link #View_filterTouchesWhenObscured com.example.testpulltorefresh:filterTouchesWhenObscured}</code></td><td>
             Specifies whether to filter touches when the view's window is obscured by
             another visible window.</td></tr>
           <tr><td><code>{@link #View_fitsSystemWindows com.example.testpulltorefresh:fitsSystemWindows}</code></td><td>
             Boolean internal attribute to adjust view layout based on
             system windows such as the status bar.</td></tr>
           <tr><td><code>{@link #View_focusable com.example.testpulltorefresh:focusable}</code></td><td>
             Boolean that controls whether a view can take focus.</td></tr>
           <tr><td><code>{@link #View_focusableInTouchMode com.example.testpulltorefresh:focusableInTouchMode}</code></td><td>
             Boolean that controls whether a view can take focus while in touch mode.</td></tr>
           <tr><td><code>{@link #View_hapticFeedbackEnabled com.example.testpulltorefresh:hapticFeedbackEnabled}</code></td><td>
             Boolean that controls whether a view should have haptic feedback
             enabled for events such as long presses.</td></tr>
           <tr><td><code>{@link #View_id com.example.testpulltorefresh:id}</code></td><td>
             Supply an identifier name for this view, to later retrieve it
             with {@link android.view.View#findViewById View.findViewById()} or
             {@link android.app.Activity#findViewById Activity.findViewById()}.</td></tr>
           <tr><td><code>{@link #View_importantForAccessibility com.example.testpulltorefresh:importantForAccessibility}</code></td><td>
             Controls how this View is important for accessibility which is if it fires
             accessibility events and if it is reported to accessibility services that
             query the screen.</td></tr>
           <tr><td><code>{@link #View_isScrollContainer com.example.testpulltorefresh:isScrollContainer}</code></td><td>
             Set this if the view will serve as a scrolling container, meaing
             that it can be resized to shrink its overall window so that there
             will be space for an input method.</td></tr>
           <tr><td><code>{@link #View_keepScreenOn com.example.testpulltorefresh:keepScreenOn}</code></td><td>
             Controls whether the view's window should keep the screen on
             while visible.</td></tr>
           <tr><td><code>{@link #View_layerType com.example.testpulltorefresh:layerType}</code></td><td>
             Specifies the type of layer backing this view.</td></tr>
           <tr><td><code>{@link #View_layoutDirection com.example.testpulltorefresh:layoutDirection}</code></td><td>
             Defines the direction of layout drawing.</td></tr>
           <tr><td><code>{@link #View_longClickable com.example.testpulltorefresh:longClickable}</code></td><td> Defines whether this view reacts to long click events.</td></tr>
           <tr><td><code>{@link #View_minHeight com.example.testpulltorefresh:minHeight}</code></td><td>
             Defines the minimum height of the view.</td></tr>
           <tr><td><code>{@link #View_minWidth com.example.testpulltorefresh:minWidth}</code></td><td>
             Defines the minimum width of the view.</td></tr>
           <tr><td><code>{@link #View_nextFocusDown com.example.testpulltorefresh:nextFocusDown}</code></td><td>
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_DOWN}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.</td></tr>
           <tr><td><code>{@link #View_nextFocusForward com.example.testpulltorefresh:nextFocusForward}</code></td><td>
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_FORWARD}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.</td></tr>
           <tr><td><code>{@link #View_nextFocusLeft com.example.testpulltorefresh:nextFocusLeft}</code></td><td>
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_LEFT}.</td></tr>
           <tr><td><code>{@link #View_nextFocusRight com.example.testpulltorefresh:nextFocusRight}</code></td><td>
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_RIGHT}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.</td></tr>
           <tr><td><code>{@link #View_nextFocusUp com.example.testpulltorefresh:nextFocusUp}</code></td><td>
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_UP}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.</td></tr>
           <tr><td><code>{@link #View_onClick com.example.testpulltorefresh:onClick}</code></td><td>
             Name of the method in this View's context to invoke when the view is
             clicked.</td></tr>
           <tr><td><code>{@link #View_overScrollMode com.example.testpulltorefresh:overScrollMode}</code></td><td>
             Defines over-scrolling behavior.</td></tr>
           <tr><td><code>{@link #View_padding com.example.testpulltorefresh:padding}</code></td><td>
             A drawable to use as the background.</td></tr>
           <tr><td><code>{@link #View_paddingBottom com.example.testpulltorefresh:paddingBottom}</code></td><td> Sets the padding, in pixels, of the bottom edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_paddingEnd com.example.testpulltorefresh:paddingEnd}</code></td><td> Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_paddingLeft com.example.testpulltorefresh:paddingLeft}</code></td><td> Sets the padding, in pixels, of the left edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_paddingRight com.example.testpulltorefresh:paddingRight}</code></td><td> Sets the padding, in pixels, of the right edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_paddingStart com.example.testpulltorefresh:paddingStart}</code></td><td> Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_paddingTop com.example.testpulltorefresh:paddingTop}</code></td><td> Sets the padding, in pixels, of the top edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_requiresFadingEdge com.example.testpulltorefresh:requiresFadingEdge}</code></td><td> Defines which edges should be faded on scrolling.</td></tr>
           <tr><td><code>{@link #View_rotation com.example.testpulltorefresh:rotation}</code></td><td> rotation of the view, in degrees.</td></tr>
           <tr><td><code>{@link #View_rotationX com.example.testpulltorefresh:rotationX}</code></td><td> rotation of the view around the x axis, in degrees.</td></tr>
           <tr><td><code>{@link #View_rotationY com.example.testpulltorefresh:rotationY}</code></td><td> rotation of the view around the y axis, in degrees.</td></tr>
           <tr><td><code>{@link #View_saveEnabled com.example.testpulltorefresh:saveEnabled}</code></td><td>
             If unset, no state will be saved for this view when it is being
             frozen.</td></tr>
           <tr><td><code>{@link #View_scaleX com.example.testpulltorefresh:scaleX}</code></td><td> scale of the view in the x direction.</td></tr>
           <tr><td><code>{@link #View_scaleY com.example.testpulltorefresh:scaleY}</code></td><td> scale of the view in the y direction.</td></tr>
           <tr><td><code>{@link #View_scrollX com.example.testpulltorefresh:scrollX}</code></td><td> The initial horizontal scroll offset, in pixels.</td></tr>
           <tr><td><code>{@link #View_scrollY com.example.testpulltorefresh:scrollY}</code></td><td> The initial vertical scroll offset, in pixels.</td></tr>
           <tr><td><code>{@link #View_scrollbarAlwaysDrawHorizontalTrack com.example.testpulltorefresh:scrollbarAlwaysDrawHorizontalTrack}</code></td><td> Defines whether the horizontal scrollbar track should always be drawn.</td></tr>
           <tr><td><code>{@link #View_scrollbarAlwaysDrawVerticalTrack com.example.testpulltorefresh:scrollbarAlwaysDrawVerticalTrack}</code></td><td> Defines whether the vertical scrollbar track should always be drawn.</td></tr>
           <tr><td><code>{@link #View_scrollbarDefaultDelayBeforeFade com.example.testpulltorefresh:scrollbarDefaultDelayBeforeFade}</code></td><td> Defines the delay in milliseconds that a scrollbar waits before fade out.</td></tr>
           <tr><td><code>{@link #View_scrollbarFadeDuration com.example.testpulltorefresh:scrollbarFadeDuration}</code></td><td> Defines the delay in milliseconds that a scrollbar takes to fade out.</td></tr>
           <tr><td><code>{@link #View_scrollbarSize com.example.testpulltorefresh:scrollbarSize}</code></td><td> Sets the width of vertical scrollbars and height of horizontal scrollbars.</td></tr>
           <tr><td><code>{@link #View_scrollbarStyle com.example.testpulltorefresh:scrollbarStyle}</code></td><td>
             Controls the scrollbar style and position.</td></tr>
           <tr><td><code>{@link #View_scrollbarThumbHorizontal com.example.testpulltorefresh:scrollbarThumbHorizontal}</code></td><td> Defines the horizontal scrollbar thumb drawable.</td></tr>
           <tr><td><code>{@link #View_scrollbarThumbVertical com.example.testpulltorefresh:scrollbarThumbVertical}</code></td><td> Defines the vertical scrollbar thumb drawable.</td></tr>
           <tr><td><code>{@link #View_scrollbarTrackHorizontal com.example.testpulltorefresh:scrollbarTrackHorizontal}</code></td><td> Defines the horizontal scrollbar track drawable.</td></tr>
           <tr><td><code>{@link #View_scrollbarTrackVertical com.example.testpulltorefresh:scrollbarTrackVertical}</code></td><td> Defines the vertical scrollbar track drawable.</td></tr>
           <tr><td><code>{@link #View_scrollbars com.example.testpulltorefresh:scrollbars}</code></td><td> Defines which scrollbars should be displayed on scrolling or not.</td></tr>
           <tr><td><code>{@link #View_soundEffectsEnabled com.example.testpulltorefresh:soundEffectsEnabled}</code></td><td>
             Boolean that controls whether a view should have sound effects
             enabled for events such as clicking and touching.</td></tr>
           <tr><td><code>{@link #View_tag com.example.testpulltorefresh:tag}</code></td><td>
             Supply a tag for this view containing a String, to be retrieved
             later with {@link android.view.View#getTag View.getTag()} or
             searched for with {@link android.view.View#findViewWithTag
             View.findViewWithTag()}.</td></tr>
           <tr><td><code>{@link #View_textAlignment com.example.testpulltorefresh:textAlignment}</code></td><td>
             Alignment of the text.</td></tr>
           <tr><td><code>{@link #View_textDirection com.example.testpulltorefresh:textDirection}</code></td><td>
             Direction of the text.</td></tr>
           <tr><td><code>{@link #View_transformPivotX com.example.testpulltorefresh:transformPivotX}</code></td><td>
             x location of the pivot point around which the view will rotate and scale.</td></tr>
           <tr><td><code>{@link #View_transformPivotY com.example.testpulltorefresh:transformPivotY}</code></td><td>
             y location of the pivot point around which the view will rotate and scale.</td></tr>
           <tr><td><code>{@link #View_translationX com.example.testpulltorefresh:translationX}</code></td><td>
             translation in x of the view.</td></tr>
           <tr><td><code>{@link #View_translationY com.example.testpulltorefresh:translationY}</code></td><td>
             translation in y of the view.</td></tr>
           <tr><td><code>{@link #View_verticalScrollbarPosition com.example.testpulltorefresh:verticalScrollbarPosition}</code></td><td> Determines which side the vertical scroll bar should be placed on.</td></tr>
           <tr><td><code>{@link #View_visibility com.example.testpulltorefresh:visibility}</code></td><td> Controls the initial visibility of the view.</td></tr>
           </table>
           @see #View_accessibilityFocusable
           @see #View_alpha
           @see #View_clickable
           @see #View_contentDescription
           @see #View_drawingCacheQuality
           @see #View_duplicateParentState
           @see #View_fadeScrollbars
           @see #View_fadingEdge
           @see #View_fadingEdgeLength
           @see #View_filterTouchesWhenObscured
           @see #View_fitsSystemWindows
           @see #View_focusable
           @see #View_focusableInTouchMode
           @see #View_hapticFeedbackEnabled
           @see #View_id
           @see #View_importantForAccessibility
           @see #View_isScrollContainer
           @see #View_keepScreenOn
           @see #View_layerType
           @see #View_layoutDirection
           @see #View_longClickable
           @see #View_minHeight
           @see #View_minWidth
           @see #View_nextFocusDown
           @see #View_nextFocusForward
           @see #View_nextFocusLeft
           @see #View_nextFocusRight
           @see #View_nextFocusUp
           @see #View_onClick
           @see #View_overScrollMode
           @see #View_padding
           @see #View_paddingBottom
           @see #View_paddingEnd
           @see #View_paddingLeft
           @see #View_paddingRight
           @see #View_paddingStart
           @see #View_paddingTop
           @see #View_requiresFadingEdge
           @see #View_rotation
           @see #View_rotationX
           @see #View_rotationY
           @see #View_saveEnabled
           @see #View_scaleX
           @see #View_scaleY
           @see #View_scrollX
           @see #View_scrollY
           @see #View_scrollbarAlwaysDrawHorizontalTrack
           @see #View_scrollbarAlwaysDrawVerticalTrack
           @see #View_scrollbarDefaultDelayBeforeFade
           @see #View_scrollbarFadeDuration
           @see #View_scrollbarSize
           @see #View_scrollbarStyle
           @see #View_scrollbarThumbHorizontal
           @see #View_scrollbarThumbVertical
           @see #View_scrollbarTrackHorizontal
           @see #View_scrollbarTrackVertical
           @see #View_scrollbars
           @see #View_soundEffectsEnabled
           @see #View_tag
           @see #View_textAlignment
           @see #View_textDirection
           @see #View_transformPivotX
           @see #View_transformPivotY
           @see #View_translationX
           @see #View_translationY
           @see #View_verticalScrollbarPosition
           @see #View_visibility
         */
        public static final int[] View = {
            0x7f010006, 0x7f010007, 0x7f010008, 0x7f010009,
            0x7f01000a, 0x7f01000b, 0x7f01000c, 0x7f01000d,
            0x7f01000e, 0x7f01000f, 0x7f010010, 0x7f010011,
            0x7f010012, 0x7f010013, 0x7f010014, 0x7f010015,
            0x7f010016, 0x7f010017, 0x7f010018, 0x7f010019,
            0x7f01001a, 0x7f01001b, 0x7f01001c, 0x7f01001d,
            0x7f01001e, 0x7f01001f, 0x7f010020, 0x7f010021,
            0x7f010022, 0x7f010023, 0x7f010024, 0x7f010025,
            0x7f010026, 0x7f010027, 0x7f010028, 0x7f010029,
            0x7f01002a, 0x7f01002b, 0x7f01002c, 0x7f01002d,
            0x7f01002e, 0x7f01002f, 0x7f010030, 0x7f010031,
            0x7f010032, 0x7f010033, 0x7f010034, 0x7f010035,
            0x7f010036, 0x7f010037, 0x7f010038, 0x7f010039,
            0x7f01003a, 0x7f01003b, 0x7f01003c, 0x7f01003d,
            0x7f01003e, 0x7f01003f, 0x7f010040, 0x7f010041,
            0x7f010042, 0x7f010043, 0x7f010044, 0x7f010045,
            0x7f010046, 0x7f010047, 0x7f010048
        };
        /**
          <p>
          @attr description
           @hide Controls whether this view can take accessibility focus. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td>
                 The system determines whether the view can take accessibility focus - default
                 (recommended).
                 <p>
                 Such a view is consideted by the focus search if it is:
                 <ul>
                 <li>
                 Important for accessibility and actionable (clickable, long clickable, focusable)
                 </li>
                 <li>
                 Important for accessibility, not actionable (clickable, long clickable, focusable),
                 and does not have an actionable predecessor.
                 </li>
                 </ul>
                 An accessibility srvice can request putting accessibility focus on such a view.
                 </p>
            </td></tr>
<tr><td><code>yes</code></td><td>1</td><td>
                 The view can take accessibility focus.
                 <p>
                 A view that can take accessibility focus is always considered during focus
                 search and an accessibility service can request putting accessibility focus
                 on it.
                 </p>
            </td></tr>
<tr><td><code>no</code></td><td>2</td><td>
                 The view can not take accessibility focus.
                 <p>
                 A view that can not take accessibility focus is never considered during focus
                 search and an accessibility service can not request putting accessibility focus
                 on it.
                 </p>
            </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:accessibilityFocusable
        */
        public static final int View_accessibilityFocusable = 66;
        /**
          <p>
          @attr description
          
             alpha property of the view, as a value between 0 (completely transparent) and 1
             (completely opaque).
        


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:alpha
        */
        public static final int View_alpha = 50;
        /**
          <p>
          @attr description
           Defines whether this view reacts to click events. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:clickable
        */
        public static final int View_clickable = 36;
        /**
          <p>
          @attr description
          
             Defines text that briefly describes content of the view. This property is used
             primarily for accessibility. Since some views do not have textual
             representation this attribute can be used for providing such.
        


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:contentDescription
        */
        public static final int View_contentDescription = 47;
        /**
          <p>
          @attr description
          
             Defines the quality of translucent drawing caches. This property is used
             only when the drawing cache is enabled and translucent. The default value is auto.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td>
                 Lets the framework decide what quality level should be used
                 for the drawing cache.
            </td></tr>
<tr><td><code>low</code></td><td>1</td><td>
                 Low quality. When set to low quality, the drawing cache uses a lower color
                 depth, thus losing precision in rendering gradients, but uses less memory.
            </td></tr>
<tr><td><code>high</code></td><td>2</td><td>
                 High quality. When set to high quality, the drawing cache uses a higher
                 color depth but uses more memory.
            </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:drawingCacheQuality
        */
        public static final int View_drawingCacheQuality = 40;
        /**
          <p>
          @attr description
          
             When this attribute is set to true, the view gets its drawable state
             (focused, pressed, etc.) from its direct parent rather than from itself.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:duplicateParentState
        */
        public static final int View_duplicateParentState = 42;
        /**
          <p>
          @attr description
           Defines whether to fade out scrollbars when they are not in use. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:fadeScrollbars
        */
        public static final int View_fadeScrollbars = 18;
        /**
          <p>
          @attr description
          
             This attribute is deprecated and will be ignored as of
             API level 14 ({@link android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH}).
             Using fading edges may introduce noticeable performance
             degradations and should be used only when required by the application's
             visual design. To request fading edges with API level 14 and above,
             use the <code>android:requiresFadingEdge</code> attribute instead.
        


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No edge is faded. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00001000</td><td> Fades horizontal edges only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00002000</td><td> Fades vertical edges only. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:fadingEdge
        */
        public static final int View_fadingEdge = 28;
        /**
          <p>
          @attr description
           Defines the length of the fading edges. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:fadingEdgeLength
        */
        public static final int View_fadingEdgeLength = 30;
        /**
          <p>
          @attr description
          
             Specifies whether to filter touches when the view's window is obscured by
             another visible window.  When set to true, the view will not receive touches
             whenever a toast, dialog or other window appears above the view's window.
             Refer to the {@link android.view.View} security documentation for more details.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:filterTouchesWhenObscured
        */
        public static final int View_filterTouchesWhenObscured = 39;
        /**
          <p>
          @attr description
          
             Boolean internal attribute to adjust view layout based on
             system windows such as the status bar.
             If true, adjusts the padding of this view to leave space for the system windows.
             Will only take effect if this view is in a non-embedded activity.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:fitsSystemWindows
        */
        public static final int View_fitsSystemWindows = 14;
        /**
          <p>
          @attr description
          
             Boolean that controls whether a view can take focus.  By default the user can not
             move focus to a view; by setting this attribute to true the view is
             allowed to take focus.  This value does not impact the behavior of
             directly calling {@link android.view.View#requestFocus}, which will
             always request focus regardless of this view.  It only impacts where
             focus navigation will try to move focus.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:focusable
        */
        public static final int View_focusable = 11;
        /**
          <p>
          @attr description
          
             Boolean that controls whether a view can take focus while in touch mode.
             If this is true for a view, that view can gain focus when clicked on, and can keep
             focus if another view is clicked on that doesn't have this attribute set to true.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:focusableInTouchMode
        */
        public static final int View_focusableInTouchMode = 12;
        /**
          <p>
          @attr description
          
             Boolean that controls whether a view should have haptic feedback
             enabled for events such as long presses.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:hapticFeedbackEnabled
        */
        public static final int View_hapticFeedbackEnabled = 46;
        /**
          <p>
          @attr description
          
             Supply an identifier name for this view, to later retrieve it
             with {@link android.view.View#findViewById View.findViewById()} or
             {@link android.app.Activity#findViewById Activity.findViewById()}.
             This must be a
             resource reference; typically you set this using the
             <code>@+</code> syntax to create a new ID resources.
             For example: <code>android:id="@+id/my_id"</code> which
             allows you to later retrieve the view
             with <code>findViewById(R.id.my_id)</code>.
        


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:id
        */
        public static final int View_id = 0;
        /**
          <p>
          @attr description
          
             Controls how this View is important for accessibility which is if it fires
             accessibility events and if it is reported to accessibility services that
             query the screen. Note: While not recommended, an accessibility service may
             decide to ignore this attribute and operate on all views in the view tree.
        


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td>
                 The system determines whether the view is important for accessibility - default
                 (recommended).
            </td></tr>
<tr><td><code>yes</code></td><td>1</td><td> The view is important for accessibility. </td></tr>
<tr><td><code>no</code></td><td>2</td><td> The view is not important for accessibility. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:importantForAccessibility
        */
        public static final int View_importantForAccessibility = 65;
        /**
          <p>
          @attr description
          
             Set this if the view will serve as a scrolling container, meaing
             that it can be resized to shrink its overall window so that there
             will be space for an input method.  If not set, the default
             value will be true if "scrollbars" has the vertical scrollbar
             set, else it will be false.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:isScrollContainer
        */
        public static final int View_isScrollContainer = 17;
        /**
          <p>
          @attr description
          
             Controls whether the view's window should keep the screen on
             while visible.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keepScreenOn
        */
        public static final int View_keepScreenOn = 41;
        /**
          <p>
          @attr description
          
             Specifies the type of layer backing this view. The default value is none.
             Refer to {@link android.view.View#setLayerType(int, android.graphics.Paint)}
             for more information.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Don't use a layer. </td></tr>
<tr><td><code>software</code></td><td>1</td><td>
                 Use a software layer. Refer to
                 {@link android.view.View#setLayerType(int, android.graphics.Paint) for
                 more information.
            </td></tr>
<tr><td><code>hardware</code></td><td>2</td><td>
                 Use a hardware layer. Refer to
                 {@link android.view.View#setLayerType(int, android.graphics.Paint) for
                 more information.
            </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:layerType
        */
        public static final int View_layerType = 61;
        /**
          <p>
          @attr description
          
             Defines the direction of layout drawing. This typically is associated with writing
             direction of the language script used. The possible values are "ltr" for Left-to-Right,
             "rtl" for Right-to-Left, "locale" and "inherit" from parent view. If there is nothing
             to inherit, "locale" is used. "locale" falls back to "en-US". "ltr" is the direction
             used in "en-US". The default for this attribute is "inherit".
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>ltr</code></td><td>0</td><td> Left-to-Right </td></tr>
<tr><td><code>rtl</code></td><td>1</td><td> Right-to-Left </td></tr>
<tr><td><code>inherit</code></td><td>2</td><td> Inherit from parent </td></tr>
<tr><td><code>locale</code></td><td>3</td><td> Locale </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:layoutDirection
        */
        public static final int View_layoutDirection = 62;
        /**
          <p>
          @attr description
           Defines whether this view reacts to long click events. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:longClickable
        */
        public static final int View_longClickable = 37;
        /**
          <p>
          @attr description
          
             Defines the minimum height of the view. It is not guaranteed
             the view will be able to achieve this minimum height (for example,
             if its parent layout constrains it with less available height).
        


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:minHeight
        */
        public static final int View_minHeight = 43;
        /**
          <p>
          @attr description
          
             Defines the minimum width of the view. It is not guaranteed
             the view will be able to achieve this minimum width (for example,
             if its parent layout constrains it with less available width).
        


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:minWidth
        */
        public static final int View_minWidth = 44;
        /**
          <p>
          @attr description
          
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_DOWN}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
        


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:nextFocusDown
        */
        public static final int View_nextFocusDown = 34;
        /**
          <p>
          @attr description
          
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_FORWARD}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
        


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:nextFocusForward
        */
        public static final int View_nextFocusForward = 35;
        /**
          <p>
          @attr description
          
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_LEFT}.

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
        


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:nextFocusLeft
        */
        public static final int View_nextFocusLeft = 31;
        /**
          <p>
          @attr description
          
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_RIGHT}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
        


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:nextFocusRight
        */
        public static final int View_nextFocusRight = 32;
        /**
          <p>
          @attr description
          
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_UP}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
        


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:nextFocusUp
        */
        public static final int View_nextFocusUp = 33;
        /**
          <p>
          @attr description
          
             Name of the method in this View's context to invoke when the view is
             clicked. This name must correspond to a public method that takes
             exactly one parameter of type View. For instance, if you specify
             <code>android:onClick="sayHello"</code>, you must declare a
             <code>public void sayHello(View v)</code> method of your context
             (typically, your Activity).
        


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:onClick
        */
        public static final int View_onClick = 48;
        /**
          <p>
          @attr description
          
             Defines over-scrolling behavior. This property is used only if the
             View is scrollable. Over-scrolling is the ability for the user to
             receive feedback when attempting to scroll beyond meaningful content.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>always</code></td><td>0</td><td>
                 Always show over-scroll effects, even if the content fits entirely
                 within the available space.
            </td></tr>
<tr><td><code>ifContentScrolls</code></td><td>1</td><td>
                 Only show over-scroll effects if the content is large
                 enough to meaningfully scroll.
            </td></tr>
<tr><td><code>never</code></td><td>2</td><td> Never show over-scroll effects. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:overScrollMode
        */
        public static final int View_overScrollMode = 49;
        /**
          <p>
          @attr description
          
             A drawable to use as the background.  This can be either a reference
             to a full drawable resource (such as a PNG image, 9-patch,
             XML state list description, etc), or a solid color such as "#ff000000"
            (black).
        
 <attr name="background" format="reference|color" /> 

             Sets the padding, in pixels, of all four edges.  Padding is defined as
             space between the edges of the view and the view's content. A views size
             will include it's padding.  If a {@link android.R.attr#background}
             is provided, the padding will initially be set to that (0 if the
             drawable does not have padding).  Explicitly setting a padding value
             will override the corresponding padding found in the background.
        


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:padding
        */
        public static final int View_padding = 4;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the bottom edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:paddingBottom
        */
        public static final int View_paddingBottom = 8;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:paddingEnd
        */
        public static final int View_paddingEnd = 10;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the left edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:paddingLeft
        */
        public static final int View_paddingLeft = 5;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the right edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:paddingRight
        */
        public static final int View_paddingRight = 7;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:paddingStart
        */
        public static final int View_paddingStart = 9;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the top edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:paddingTop
        */
        public static final int View_paddingTop = 6;
        /**
          <p>
          @attr description
           Defines which edges should be faded on scrolling. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No edge is faded. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00001000</td><td> Fades horizontal edges only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00002000</td><td> Fades vertical edges only. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:requiresFadingEdge
        */
        public static final int View_requiresFadingEdge = 29;
        /**
          <p>
          @attr description
           rotation of the view, in degrees. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:rotation
        */
        public static final int View_rotation = 55;
        /**
          <p>
          @attr description
           rotation of the view around the x axis, in degrees. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:rotationX
        */
        public static final int View_rotationX = 56;
        /**
          <p>
          @attr description
           rotation of the view around the y axis, in degrees. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:rotationY
        */
        public static final int View_rotationY = 57;
        /**
          <p>
          @attr description
          
             If unset, no state will be saved for this view when it is being
             frozen. The default is true, allowing the view to be saved
             (however it also must have an ID assigned to it for its
             state to be saved).  Setting this to false only disables the
             state for this view, not for its children which may still
             be saved.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:saveEnabled
        */
        public static final int View_saveEnabled = 38;
        /**
          <p>
          @attr description
           scale of the view in the x direction. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:scaleX
        */
        public static final int View_scaleX = 58;
        /**
          <p>
          @attr description
           scale of the view in the y direction. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:scaleY
        */
        public static final int View_scaleY = 59;
        /**
          <p>
          @attr description
           The initial horizontal scroll offset, in pixels. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:scrollX
        */
        public static final int View_scrollX = 2;
        /**
          <p>
          @attr description
           The initial vertical scroll offset, in pixels. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:scrollY
        */
        public static final int View_scrollY = 3;
        /**
          <p>
          @attr description
           Defines whether the horizontal scrollbar track should always be drawn. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:scrollbarAlwaysDrawHorizontalTrack
        */
        public static final int View_scrollbarAlwaysDrawHorizontalTrack = 26;
        /**
          <p>
          @attr description
           Defines whether the vertical scrollbar track should always be drawn. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:scrollbarAlwaysDrawVerticalTrack
        */
        public static final int View_scrollbarAlwaysDrawVerticalTrack = 27;
        /**
          <p>
          @attr description
           Defines the delay in milliseconds that a scrollbar waits before fade out. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:scrollbarDefaultDelayBeforeFade
        */
        public static final int View_scrollbarDefaultDelayBeforeFade = 20;
        /**
          <p>
          @attr description
           Defines the delay in milliseconds that a scrollbar takes to fade out. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:scrollbarFadeDuration
        */
        public static final int View_scrollbarFadeDuration = 19;
        /**
          <p>
          @attr description
           Sets the width of vertical scrollbars and height of horizontal scrollbars. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:scrollbarSize
        */
        public static final int View_scrollbarSize = 21;
        /**
          <p>
          @attr description
          
             Controls the scrollbar style and position. The scrollbars can be overlaid or
             inset. When inset, they add to the padding of the view. And the
             scrollbars can be drawn inside the padding area or on the edge of
             the view. For example, if a view has a background drawable and you
             want to draw the scrollbars inside the padding specified by the
             drawable, you can use insideOverlay or insideInset. If you want them
             to appear at the edge of the view, ignoring the padding, then you can
             use outsideOverlay or outsideInset.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>insideOverlay</code></td><td>0x0</td><td> Inside the padding and overlaid </td></tr>
<tr><td><code>insideInset</code></td><td>0x01000000</td><td> Inside the padding and inset </td></tr>
<tr><td><code>outsideOverlay</code></td><td>0x02000000</td><td> Edge of the view and overlaid </td></tr>
<tr><td><code>outsideInset</code></td><td>0x03000000</td><td> Edge of the view and inset </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:scrollbarStyle
        */
        public static final int View_scrollbarStyle = 16;
        /**
          <p>
          @attr description
           Defines the horizontal scrollbar thumb drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:scrollbarThumbHorizontal
        */
        public static final int View_scrollbarThumbHorizontal = 22;
        /**
          <p>
          @attr description
           Defines the vertical scrollbar thumb drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:scrollbarThumbVertical
        */
        public static final int View_scrollbarThumbVertical = 23;
        /**
          <p>
          @attr description
           Defines the horizontal scrollbar track drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:scrollbarTrackHorizontal
        */
        public static final int View_scrollbarTrackHorizontal = 24;
        /**
          <p>
          @attr description
           Defines the vertical scrollbar track drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:scrollbarTrackVertical
        */
        public static final int View_scrollbarTrackVertical = 25;
        /**
          <p>
          @attr description
           Defines which scrollbars should be displayed on scrolling or not. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No scrollbar is displayed. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00000100</td><td> Displays horizontal scrollbar only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00000200</td><td> Displays vertical scrollbar only. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:scrollbars
        */
        public static final int View_scrollbars = 15;
        /**
          <p>
          @attr description
          
             Boolean that controls whether a view should have sound effects
             enabled for events such as clicking and touching.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:soundEffectsEnabled
        */
        public static final int View_soundEffectsEnabled = 45;
        /**
          <p>
          @attr description
          
             Supply a tag for this view containing a String, to be retrieved
             later with {@link android.view.View#getTag View.getTag()} or
             searched for with {@link android.view.View#findViewWithTag
             View.findViewWithTag()}.  It is generally preferable to use
             IDs (through the android:id attribute) instead of tags because
             they are faster and allow for compile-time type checking.
        


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:tag
        */
        public static final int View_tag = 1;
        /**
          <p>
          @attr description
          
             Alignment of the text. A heuristic is used to determine the resolved
            text alignment.
        


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>inherit</code></td><td>0</td><td> Default </td></tr>
<tr><td><code>gravity</code></td><td>1</td><td>
                 Default for the root view. The gravity determines the alignment, ALIGN_NORMAL,
                ALIGN_CENTER, or ALIGN_OPPOSITE, which are relative to each paragraph’s
                text direction
            </td></tr>
<tr><td><code>textStart</code></td><td>2</td><td> Align to the start of the paragraph, e.g. ALIGN_NORMAL. </td></tr>
<tr><td><code>textEnd</code></td><td>3</td><td> Align to the end of the paragraph, e.g. ALIGN_OPPOSITE. </td></tr>
<tr><td><code>center</code></td><td>4</td><td> Center the paragraph, e.g. ALIGN_CENTER. </td></tr>
<tr><td><code>viewStart</code></td><td>5</td><td>
                 Align to the start of the view, which is ALIGN_LEFT if the view’s resolved
                layoutDirection is LTR, and ALIGN_RIGHT otherwise.
            </td></tr>
<tr><td><code>viewEnd</code></td><td>6</td><td>
                 Align to the end of the view, which is ALIGN_RIGHT if the view’s resolved
                layoutDirection is LTR, and ALIGN_LEFT otherwise
            </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:textAlignment
        */
        public static final int View_textAlignment = 64;
        /**
          <p>
          @attr description
          
             Direction of the text. A heuristic is used to determine the resolved text direction
             of paragraphs.
        


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>inherit</code></td><td>0</td><td> Default </td></tr>
<tr><td><code>firstStrong</code></td><td>1</td><td>
                 Default for the root view. The first strong directional character determines the
                 paragraph direction.  If there is no strong directional character, the paragraph
                 direction is the view’s resolved layout direction.
            </td></tr>
<tr><td><code>anyRtl</code></td><td>2</td><td>
                 The paragraph direction is RTL if it contains any strong RTL character, otherwise
                 it is LTR if it contains any strong LTR characters.  If there are neither, the
                 paragraph direction is the view’s resolved layout direction.
            </td></tr>
<tr><td><code>ltr</code></td><td>3</td><td> The paragraph direction is left to right. </td></tr>
<tr><td><code>rtl</code></td><td>4</td><td> The paragraph direction is right to left. </td></tr>
<tr><td><code>locale</code></td><td>5</td><td> The paragraph direction is coming from the system Locale. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:textDirection
        */
        public static final int View_textDirection = 63;
        /**
          <p>
          @attr description
          
             x location of the pivot point around which the view will rotate and scale.
             This xml attribute sets the pivotX property of the View.
        


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:transformPivotX
        */
        public static final int View_transformPivotX = 53;
        /**
          <p>
          @attr description
          
             y location of the pivot point around which the view will rotate and scale.
             This xml attribute sets the pivotY property of the View.
        


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:transformPivotY
        */
        public static final int View_transformPivotY = 54;
        /**
          <p>
          @attr description
          
             translation in x of the view. This value is added post-layout to the left
             property of the view, which is set by its layout.
        


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:translationX
        */
        public static final int View_translationX = 51;
        /**
          <p>
          @attr description
          
             translation in y of the view. This value is added post-layout to the left
             property of the view, which is set by its layout.
        


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:translationY
        */
        public static final int View_translationY = 52;
        /**
          <p>
          @attr description
           Determines which side the vertical scroll bar should be placed on. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>defaultPosition</code></td><td>0</td><td> Place the scroll bar wherever the system default determines. </td></tr>
<tr><td><code>left</code></td><td>1</td><td> Place the scroll bar on the left. </td></tr>
<tr><td><code>right</code></td><td>2</td><td> Place the scroll bar on the right. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:verticalScrollbarPosition
        */
        public static final int View_verticalScrollbarPosition = 60;
        /**
          <p>
          @attr description
           Controls the initial visibility of the view. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>visible</code></td><td>0</td><td> Visible on screen; the default value. </td></tr>
<tr><td><code>invisible</code></td><td>1</td><td> Not displayed, but taken into account during layout (space is left for it). </td></tr>
<tr><td><code>gone</code></td><td>2</td><td> Completely hidden, as if the view had not been added. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:visibility
        */
        public static final int View_visibility = 13;
        /** 
         Attributes that can be used with a {@link android.view.ViewGroup} or any
         of its subclasses.  Also see {@link #ViewGroup_Layout} for
         attributes that this class processes in its children.
    
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ViewGroup_addStatesFromChildren com.example.testpulltorefresh:addStatesFromChildren}</code></td><td>
             Sets whether this ViewGroup's drawable states also include
             its children's drawable states.</td></tr>
           <tr><td><code>{@link #ViewGroup_alwaysDrawnWithCache com.example.testpulltorefresh:alwaysDrawnWithCache}</code></td><td>
             Defines whether the ViewGroup should always draw its children using their
             drawing cache or not.</td></tr>
           <tr><td><code>{@link #ViewGroup_animateLayoutChanges com.example.testpulltorefresh:animateLayoutChanges}</code></td><td>
             Defines whether changes in layout (caused by adding and removing items) should
             cause a LayoutTransition to run.</td></tr>
           <tr><td><code>{@link #ViewGroup_animationCache com.example.testpulltorefresh:animationCache}</code></td><td>
             Defines whether layout animations should create a drawing cache for their
             children.</td></tr>
           <tr><td><code>{@link #ViewGroup_clipChildren com.example.testpulltorefresh:clipChildren}</code></td><td>
             Defines whether a child is limited to draw inside of its bounds or not.</td></tr>
           <tr><td><code>{@link #ViewGroup_clipToPadding com.example.testpulltorefresh:clipToPadding}</code></td><td>
             Defines whether the ViewGroup will clip its drawing surface so as to exclude
             the padding area.</td></tr>
           <tr><td><code>{@link #ViewGroup_descendantFocusability com.example.testpulltorefresh:descendantFocusability}</code></td><td>
             Defines the relationship between the ViewGroup and its descendants
             when looking for a View to take focus.</td></tr>
           <tr><td><code>{@link #ViewGroup_layoutAnimation com.example.testpulltorefresh:layoutAnimation}</code></td><td>
             Defines the layout animation to use the first time the ViewGroup is laid out.</td></tr>
           <tr><td><code>{@link #ViewGroup_persistentDrawingCache com.example.testpulltorefresh:persistentDrawingCache}</code></td><td>
             Defines the persistence of the drawing cache.</td></tr>
           <tr><td><code>{@link #ViewGroup_splitMotionEvents com.example.testpulltorefresh:splitMotionEvents}</code></td><td>
             Sets whether this ViewGroup should split MotionEvents
             to separate child views during touch event dispatch.</td></tr>
           </table>
           @see #ViewGroup_addStatesFromChildren
           @see #ViewGroup_alwaysDrawnWithCache
           @see #ViewGroup_animateLayoutChanges
           @see #ViewGroup_animationCache
           @see #ViewGroup_clipChildren
           @see #ViewGroup_clipToPadding
           @see #ViewGroup_descendantFocusability
           @see #ViewGroup_layoutAnimation
           @see #ViewGroup_persistentDrawingCache
           @see #ViewGroup_splitMotionEvents
         */
        public static final int[] ViewGroup = {
            0x7f010049, 0x7f01004a, 0x7f01004b, 0x7f01004c,
            0x7f01004d, 0x7f01004e, 0x7f01004f, 0x7f010050,
            0x7f010051, 0x7f010052
        };
        /**
          <p>
          @attr description
          
             Sets whether this ViewGroup's drawable states also include
             its children's drawable states.  This is used, for example, to
             make a group appear to be focused when its child EditText or button
             is focused.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:addStatesFromChildren
        */
        public static final int ViewGroup_addStatesFromChildren = 7;
        /**
          <p>
          @attr description
          
             Defines whether the ViewGroup should always draw its children using their
             drawing cache or not. The default value is true.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:alwaysDrawnWithCache
        */
        public static final int ViewGroup_alwaysDrawnWithCache = 6;
        /**
          <p>
          @attr description
          
             Defines whether changes in layout (caused by adding and removing items) should
             cause a LayoutTransition to run. When this flag is set to true, a default
             LayoutTransition object will be set on the ViewGroup container and default
             animations will run when these layout changes occur.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:animateLayoutChanges
        */
        public static final int ViewGroup_animateLayoutChanges = 0;
        /**
          <p>
          @attr description
          
             Defines whether layout animations should create a drawing cache for their
             children. Enabling the animation cache consumes more memory and requires
             a longer initialization but provides better performance. The animation
             cache is enabled by default.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:animationCache
        */
        public static final int ViewGroup_animationCache = 4;
        /**
          <p>
          @attr description
          
             Defines whether a child is limited to draw inside of its bounds or not.
             This is useful with animations that scale the size of the children to more
             than 100% for instance. In such a case, this property should be set to false
             to allow the children to draw outside of their bounds. The default value of
             this property is true.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:clipChildren
        */
        public static final int ViewGroup_clipChildren = 1;
        /**
          <p>
          @attr description
          
             Defines whether the ViewGroup will clip its drawing surface so as to exclude
             the padding area. This property is set to true by default.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:clipToPadding
        */
        public static final int ViewGroup_clipToPadding = 2;
        /**
          <p>
          @attr description
          
             Defines the relationship between the ViewGroup and its descendants
             when looking for a View to take focus.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>beforeDescendants</code></td><td>0</td><td> The ViewGroup will get focus before any of its descendants. </td></tr>
<tr><td><code>afterDescendants</code></td><td>1</td><td> The ViewGroup will get focus only if none of its descendants want it. </td></tr>
<tr><td><code>blocksDescendants</code></td><td>2</td><td> The ViewGroup will block its descendants from receiving focus. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:descendantFocusability
        */
        public static final int ViewGroup_descendantFocusability = 8;
        /**
          <p>
          @attr description
          
             Defines the layout animation to use the first time the ViewGroup is laid out.
             Layout animations can also be started manually after the first layout.
        


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:layoutAnimation
        */
        public static final int ViewGroup_layoutAnimation = 3;
        /**
          <p>
          @attr description
          
             Defines the persistence of the drawing cache. The drawing cache might be
             enabled by a ViewGroup for all its children in specific situations (for
             instance during a scrolling.) This property lets you persist the cache
             in memory after its initial usage. Persisting the cache consumes more
             memory but may prevent frequent garbage collection is the cache is created
             over and over again. By default the persistence is set to scrolling.
        


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x0</td><td> The drawing cache is not persisted after use. </td></tr>
<tr><td><code>animation</code></td><td>0x1</td><td> The drawing cache is persisted after a layout animation. </td></tr>
<tr><td><code>scrolling</code></td><td>0x2</td><td> The drawing cache is persisted after a scroll. </td></tr>
<tr><td><code>all</code></td><td>0x3</td><td> The drawing cache is always persisted. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:persistentDrawingCache
        */
        public static final int ViewGroup_persistentDrawingCache = 5;
        /**
          <p>
          @attr description
          
             Sets whether this ViewGroup should split MotionEvents
             to separate child views during touch event dispatch.
             If false (default), touch events will be dispatched to
             the child view where the first pointer went down until
             the last pointer goes up.
             If true, touch events may be dispatched to multiple children.
             MotionEvents for each pointer will be dispatched to the child
             view where the initial ACTION_DOWN event happened.
             See {@link android.view.ViewGroup#setMotionEventSplittingEnabled(boolean)}
             for more information.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:splitMotionEvents
        */
        public static final int ViewGroup_splitMotionEvents = 9;
    };
}
